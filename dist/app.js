/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/app.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/MinHeap.js":
/*!********************************************!*\
  !*** ./node_modules/rot-js/lib/MinHeap.js ***!
  \********************************************/
/*! exports provided: MinHeap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinHeap\", function() { return MinHeap; });\nclass MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/MinHeap.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/color.js":
/*!******************************************!*\
  !*** ./node_modules/rot-js/lib/color.js ***!
  \******************************************/
/*! exports provided: fromString, add, add_, multiply, multiply_, interpolate, lerp, interpolateHSL, lerpHSL, randomize, rgb2hsl, hsl2rgb, toRGB, toHex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromString\", function() { return fromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add_\", function() { return add_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply_\", function() { return multiply_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolate\", function() { return interpolate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerp\", function() { return lerp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHSL\", function() { return interpolateHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lerpHSL\", function() { return lerpHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomize\", function() { return randomize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rgb2hsl\", function() { return rgb2hsl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hsl2rgb\", function() { return hsl2rgb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toRGB\", function() { return toRGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toHex\", function() { return toHex; });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./node_modules/rot-js/lib/util.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\nfunction fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nfunction add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nfunction add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nfunction multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nfunction multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nfunction interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nconst lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nfunction interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nconst lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nfunction randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nfunction rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nfunction hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nfunction toRGB(color) {\n    let clamped = color.map(x => Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nfunction toHex(color) {\n    let clamped = color.map(x => Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"clamp\"])(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/color.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/constants.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/constants.js ***!
  \**********************************************/
/*! exports provided: DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_WIDTH\", function() { return DEFAULT_WIDTH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_HEIGHT\", function() { return DEFAULT_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DIRS\", function() { return DIRS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KEYS\", function() { return KEYS; });\n/** Default with for display and map generators */\nlet DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nlet DEFAULT_HEIGHT = 25;\nconst DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nconst KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/constants.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/backend.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/display/backend.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Backend; });\n/**\n * @class Abstract display backend module\n * @private\n */\nclass Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/backend.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/canvas.js":
/*!***************************************************!*\
  !*** ./node_modules/rot-js/lib/display/canvas.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Canvas; });\n/* harmony import */ var _backend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./backend.js */ \"./node_modules/rot-js/lib/display/backend.js\");\n\nclass Canvas extends _backend_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/canvas.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/display.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/display/display.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex.js */ \"./node_modules/rot-js/lib/display/hex.js\");\n/* harmony import */ var _rect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rect.js */ \"./node_modules/rot-js/lib/display/rect.js\");\n/* harmony import */ var _tile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tile.js */ \"./node_modules/rot-js/lib/display/tile.js\");\n/* harmony import */ var _tile_gl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tile-gl.js */ \"./node_modules/rot-js/lib/display/tile-gl.js\");\n/* harmony import */ var _term_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./term.js */ \"./node_modules/rot-js/lib/display/term.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../text.js */ \"./node_modules/rot-js/lib/text.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n\n\n\n\n\n\nconst BACKENDS = {\n    \"hex\": _hex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    \"rect\": _rect_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    \"tile\": _tile_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    \"tile-gl\": _tile_gl_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    \"term\": _term_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n};\nconst DEFAULT_OPTIONS = {\n    width: _constants_js__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_WIDTH\"],\n    height: _constants_js__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_HEIGHT\"],\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string || null} [fg] foreground color\n         * @param {string || null} [bg] background color\n         */\n        drawOver(x, y, ch, fg, bg) {\n            const key = `${x},${y}`;\n            const existing = this._data[key];\n            if (existing) {\n                existing[2] = ch || existing[2];\n                existing[3] = fg || existing[3];\n                existing[4] = bg || existing[4];\n            }\n            else {\n                this.draw(x, y, ch, fg, bg);\n            }\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = _text_js__WEBPACK_IMPORTED_MODULE_5__[\"tokenize\"](text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case _text_js__WEBPACK_IMPORTED_MODULE_5__[\"TYPE_TEXT\"]:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case _text_js__WEBPACK_IMPORTED_MODULE_5__[\"TYPE_FG\"]:\n                        fg = token.value || null;\n                        break;\n                    case _text_js__WEBPACK_IMPORTED_MODULE_5__[\"TYPE_BG\"]:\n                        bg = token.value || null;\n                        break;\n                    case _text_js__WEBPACK_IMPORTED_MODULE_5__[\"TYPE_NEWLINE\"]:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = _rect_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    Display.Hex = _hex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    Display.Tile = _tile_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    Display.TileGL = _tile_gl_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    Display.Term = _term_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n    return Display;\n})();\n/* harmony default export */ __webpack_exports__[\"default\"] = (Display);\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/display.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/hex.js":
/*!************************************************!*\
  !*** ./node_modules/rot-js/lib/display/hex.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Hex; });\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas.js */ \"./node_modules/rot-js/lib/display/canvas.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util.js */ \"./node_modules/rot-js/lib/util.js\");\n\n\n/**\n * @class Hexagonal backend\n * @private\n */\nclass Hex extends _canvas_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (Object(_util_js__WEBPACK_IMPORTED_MODULE_1__[\"mod\"])(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/hex.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/rect.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/display/rect.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas.js */ \"./node_modules/rot-js/lib/display/canvas.js\");\n\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends _canvas_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\n/* harmony default export */ __webpack_exports__[\"default\"] = (Rect);\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/rect.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/term.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/display/term.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Term; });\n/* harmony import */ var _backend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./backend.js */ \"./node_modules/rot-js/lib/display/backend.js\");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../color.js */ \"./node_modules/rot-js/lib/color.js\");\n\n\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = _color_js__WEBPACK_IMPORTED_MODULE_1__[\"fromString\"](color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nclass Term extends _backend_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/term.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/tile-gl.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/display/tile-gl.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TileGL; });\n/* harmony import */ var _backend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./backend.js */ \"./node_modules/rot-js/lib/display/backend.js\");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../color.js */ \"./node_modules/rot-js/lib/color.js\");\n\n\n/**\n * @class Tile backend\n * @private\n */\nclass TileGL extends _backend_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = _color_js__WEBPACK_IMPORTED_MODULE_1__[\"fromString\"](color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/tile-gl.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/display/tile.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/display/tile.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tile; });\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas.js */ \"./node_modules/rot-js/lib/display/canvas.js\");\n\n/**\n * @class Tile backend\n * @private\n */\nclass Tile extends _canvas_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/display/tile.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/engine.js":
/*!*******************************************!*\
  !*** ./node_modules/rot-js/lib/engine.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Engine; });\n/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nclass Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/engine.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/eventqueue.js":
/*!***********************************************!*\
  !*** ./node_modules/rot-js/lib/eventqueue.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EventQueue; });\n/* harmony import */ var _MinHeap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MinHeap.js */ \"./node_modules/rot-js/lib/MinHeap.js\");\n\nclass EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new _MinHeap_js__WEBPACK_IMPORTED_MODULE_0__[\"MinHeap\"]();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new _MinHeap_js__WEBPACK_IMPORTED_MODULE_0__[\"MinHeap\"]();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/eventqueue.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/fov/discrete-shadowcasting.js":
/*!***************************************************************!*\
  !*** ./node_modules/rot-js/lib/fov/discrete-shadowcasting.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DiscreteShadowcasting; });\n/* harmony import */ var _fov_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fov.js */ \"./node_modules/rot-js/lib/fov/fov.js\");\n\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nclass DiscreteShadowcasting extends _fov_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/fov/discrete-shadowcasting.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/fov/fov.js":
/*!********************************************!*\
  !*** ./node_modules/rot-js/lib/fov/fov.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FOV; });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n;\n;\nclass FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][8][7],\n                    _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][8][1],\n                    _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][8][3],\n                    _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][8][5]\n                ];\n                break;\n            case 6:\n                dirs = _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/fov/fov.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/fov/index.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/fov/index.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _discrete_shadowcasting_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./discrete-shadowcasting.js */ \"./node_modules/rot-js/lib/fov/discrete-shadowcasting.js\");\n/* harmony import */ var _precise_shadowcasting_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./precise-shadowcasting.js */ \"./node_modules/rot-js/lib/fov/precise-shadowcasting.js\");\n/* harmony import */ var _recursive_shadowcasting_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recursive-shadowcasting.js */ \"./node_modules/rot-js/lib/fov/recursive-shadowcasting.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ DiscreteShadowcasting: _discrete_shadowcasting_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], PreciseShadowcasting: _precise_shadowcasting_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], RecursiveShadowcasting: _recursive_shadowcasting_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] });\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/fov/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/fov/precise-shadowcasting.js":
/*!**************************************************************!*\
  !*** ./node_modules/rot-js/lib/fov/precise-shadowcasting.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PreciseShadowcasting; });\n/* harmony import */ var _fov_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fov.js */ \"./node_modules/rot-js/lib/fov/fov.js\");\n\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nclass PreciseShadowcasting extends _fov_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/fov/precise-shadowcasting.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/fov/recursive-shadowcasting.js":
/*!****************************************************************!*\
  !*** ./node_modules/rot-js/lib/fov/recursive-shadowcasting.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RecursiveShadowcasting; });\n/* harmony import */ var _fov_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fov.js */ \"./node_modules/rot-js/lib/fov/fov.js\");\n\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nclass RecursiveShadowcasting extends _fov_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/fov/recursive-shadowcasting.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/rot-js/lib/index.js ***!
  \******************************************/
/*! exports provided: RNG, Display, StringGenerator, EventQueue, Scheduler, FOV, Map, Noise, Path, Engine, Lighting, DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS, Util, Color, Text */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Util\", function() { return Util; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Text\", function() { return Text; });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RNG\", function() { return _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _display_display_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./display/display.js */ \"./node_modules/rot-js/lib/display/display.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Display\", function() { return _display_display_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _stringgenerator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringgenerator.js */ \"./node_modules/rot-js/lib/stringgenerator.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"StringGenerator\", function() { return _stringgenerator_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _eventqueue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventqueue.js */ \"./node_modules/rot-js/lib/eventqueue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventQueue\", function() { return _eventqueue_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _scheduler_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scheduler/index.js */ \"./node_modules/rot-js/lib/scheduler/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Scheduler\", function() { return _scheduler_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _fov_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fov/index.js */ \"./node_modules/rot-js/lib/fov/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FOV\", function() { return _fov_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _map_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./map/index.js */ \"./node_modules/rot-js/lib/map/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return _map_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _noise_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./noise/index.js */ \"./node_modules/rot-js/lib/noise/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Noise\", function() { return _noise_index_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _path_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./path/index.js */ \"./node_modules/rot-js/lib/path/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Path\", function() { return _path_index_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _engine_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./engine.js */ \"./node_modules/rot-js/lib/engine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Engine\", function() { return _engine_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _lighting_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lighting.js */ \"./node_modules/rot-js/lib/lighting.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Lighting\", function() { return _lighting_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_WIDTH\", function() { return _constants_js__WEBPACK_IMPORTED_MODULE_11__[\"DEFAULT_WIDTH\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_HEIGHT\", function() { return _constants_js__WEBPACK_IMPORTED_MODULE_11__[\"DEFAULT_HEIGHT\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DIRS\", function() { return _constants_js__WEBPACK_IMPORTED_MODULE_11__[\"DIRS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KEYS\", function() { return _constants_js__WEBPACK_IMPORTED_MODULE_11__[\"KEYS\"]; });\n\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./util.js */ \"./node_modules/rot-js/lib/util.js\");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./color.js */ \"./node_modules/rot-js/lib/color.js\");\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./text.js */ \"./node_modules/rot-js/lib/text.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Util = _util_js__WEBPACK_IMPORTED_MODULE_12__;\n\nconst Color = _color_js__WEBPACK_IMPORTED_MODULE_13__;\n\nconst Text = _text_js__WEBPACK_IMPORTED_MODULE_14__;\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/lighting.js":
/*!*********************************************!*\
  !*** ./node_modules/rot-js/lib/lighting.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Lighting; });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ \"./node_modules/rot-js/lib/color.js\");\n\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nclass Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? _color_js__WEBPACK_IMPORTED_MODULE_0__[\"fromString\"](color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            _color_js__WEBPACK_IMPORTED_MODULE_0__[\"add_\"](emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/lighting.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/arena.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/map/arena.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Arena; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nclass Arena extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/arena.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/cellular.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/map/cellular.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Cellular; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\n\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nclass Cellular extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"DIRS\"][this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (_rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[_rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[_rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[_rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/cellular.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/digger.js":
/*!***********************************************!*\
  !*** ./node_modules/rot-js/lib/map/digger.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Digger; });\n/* harmony import */ var _dungeon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dungeon.js */ \"./node_modules/rot-js/lib/map/dungeon.js\");\n/* harmony import */ var _features_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./features.js */ \"./node_modules/rot-js/lib/map/features.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n\n\n\nconst FEATURES = {\n    \"room\": _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Room\"],\n    \"corridor\": _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Corridor\"]\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nclass Digger extends _dungeon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Room\"].createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = _rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = _rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Room\"]) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Corridor\"]) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"DIRS\"][4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"DIRS\"][4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/digger.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/dividedmaze.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/map/dividedmaze.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DividedMaze; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nclass DividedMaze extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItem(availX);\n        let y = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/dividedmaze.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/dungeon.js":
/*!************************************************!*\
  !*** ./node_modules/rot-js/lib/map/dungeon.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Dungeon; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nclass Dungeon extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/dungeon.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/ellermaze.js":
/*!**************************************************!*\
  !*** ./node_modules/rot-js/lib/map/ellermaze.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EllerMaze; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nclass EllerMaze extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/ellermaze.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/features.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/map/features.js ***!
  \*************************************************/
/*! exports provided: Room, Corridor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Room\", function() { return Room; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Corridor\", function() { return Corridor; });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nclass Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        let x1 = cx - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * width);\n        let y1 = cy - Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * left);\n        let y1 = 1 + Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nclass Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/features.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/iceymaze.js":
/*!*************************************************!*\
  !*** ./node_modules/rot-js/lib/map/iceymaze.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IceyMaze; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nclass IceyMaze extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/iceymaze.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/index.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/map/index.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _arena_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arena.js */ \"./node_modules/rot-js/lib/map/arena.js\");\n/* harmony import */ var _uniform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uniform.js */ \"./node_modules/rot-js/lib/map/uniform.js\");\n/* harmony import */ var _cellular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cellular.js */ \"./node_modules/rot-js/lib/map/cellular.js\");\n/* harmony import */ var _digger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./digger.js */ \"./node_modules/rot-js/lib/map/digger.js\");\n/* harmony import */ var _ellermaze_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ellermaze.js */ \"./node_modules/rot-js/lib/map/ellermaze.js\");\n/* harmony import */ var _dividedmaze_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dividedmaze.js */ \"./node_modules/rot-js/lib/map/dividedmaze.js\");\n/* harmony import */ var _iceymaze_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./iceymaze.js */ \"./node_modules/rot-js/lib/map/iceymaze.js\");\n/* harmony import */ var _rogue_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rogue.js */ \"./node_modules/rot-js/lib/map/rogue.js\");\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ Arena: _arena_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], Uniform: _uniform_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], Cellular: _cellular_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Digger: _digger_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"], EllerMaze: _ellermaze_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"], DividedMaze: _dividedmaze_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"], IceyMaze: _iceymaze_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Rogue: _rogue_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"] });\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/map.js":
/*!********************************************!*\
  !*** ./node_modules/rot-js/lib/map/map.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Map; });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n;\nclass Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DEFAULT_WIDTH\"], height = _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DEFAULT_HEIGHT\"]) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/map.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/rogue.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/map/rogue.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Rogue; });\n/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map.js */ \"./node_modules/rot-js/lib/map/map.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n\n\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nclass Rogue extends _map_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][idx][0];\n                ncgy = cgy + _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][dirIdx][0];\n                        let newJ = j + _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(_rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][move[0]][0];\n                ypos += _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"DIRS\"][8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/rogue.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/map/uniform.js":
/*!************************************************!*\
  !*** ./node_modules/rot-js/lib/map/uniform.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Uniform; });\n/* harmony import */ var _dungeon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dungeon.js */ \"./node_modules/rot-js/lib/map/dungeon.js\");\n/* harmony import */ var _features_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./features.js */ \"./node_modules/rot-js/lib/map/features.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n\n\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nclass Uniform extends _dungeon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Room\"].createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = _rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = _rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? _rng_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new _features_js__WEBPACK_IMPORTED_MODULE_1__[\"Corridor\"](start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/map/uniform.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/noise/index.js":
/*!************************************************!*\
  !*** ./node_modules/rot-js/lib/noise/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _simplex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simplex.js */ \"./node_modules/rot-js/lib/noise/simplex.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ Simplex: _simplex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] });\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/noise/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/noise/noise.js":
/*!************************************************!*\
  !*** ./node_modules/rot-js/lib/noise/noise.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Noise; });\n/**\n * Base noise generator\n */\nclass Noise {\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/noise/noise.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/noise/simplex.js":
/*!**************************************************!*\
  !*** ./node_modules/rot-js/lib/noise/simplex.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Simplex; });\n/* harmony import */ var _noise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./noise.js */ \"./node_modules/rot-js/lib/noise/noise.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./node_modules/rot-js/lib/util.js\");\n\n\n\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nclass Simplex extends _noise_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"mod\"])(i, count);\n        let jj = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"mod\"])(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/noise/simplex.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/path/astar.js":
/*!***********************************************!*\
  !*** ./node_modules/rot-js/lib/path/astar.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AStar; });\n/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path.js */ \"./node_modules/rot-js/lib/path/path.js\");\n\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nclass AStar extends _path_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/path/astar.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/path/dijkstra.js":
/*!**************************************************!*\
  !*** ./node_modules/rot-js/lib/path/dijkstra.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Dijkstra; });\n/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path.js */ \"./node_modules/rot-js/lib/path/path.js\");\n\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nclass Dijkstra extends _path_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/path/dijkstra.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/rot-js/lib/path/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dijkstra_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dijkstra.js */ \"./node_modules/rot-js/lib/path/dijkstra.js\");\n/* harmony import */ var _astar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./astar.js */ \"./node_modules/rot-js/lib/path/astar.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ Dijkstra: _dijkstra_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], AStar: _astar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] });\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/path/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/path/path.js":
/*!**********************************************!*\
  !*** ./node_modules/rot-js/lib/path/path.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Path; });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/rot-js/lib/constants.js\");\n\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nclass Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"DIRS\"][this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/path/path.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/rng.js":
/*!****************************************!*\
  !*** ./node_modules/rot-js/lib/rng.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (new RNG().setSeed(Date.now()));\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/rng.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/scheduler/action.js":
/*!*****************************************************!*\
  !*** ./node_modules/rot-js/lib/scheduler/action.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Action; });\n/* harmony import */ var _scheduler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduler.js */ \"./node_modules/rot-js/lib/scheduler/scheduler.js\");\n\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nclass Action extends _scheduler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/scheduler/action.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/scheduler/index.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/scheduler/index.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _simple_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simple.js */ \"./node_modules/rot-js/lib/scheduler/simple.js\");\n/* harmony import */ var _speed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./speed.js */ \"./node_modules/rot-js/lib/scheduler/speed.js\");\n/* harmony import */ var _action_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./action.js */ \"./node_modules/rot-js/lib/scheduler/action.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ Simple: _simple_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], Speed: _speed_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], Action: _action_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] });\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/scheduler/index.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/scheduler/scheduler.js":
/*!********************************************************!*\
  !*** ./node_modules/rot-js/lib/scheduler/scheduler.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Scheduler; });\n/* harmony import */ var _eventqueue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../eventqueue.js */ \"./node_modules/rot-js/lib/eventqueue.js\");\n\nclass Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new _eventqueue_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/scheduler/scheduler.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/scheduler/simple.js":
/*!*****************************************************!*\
  !*** ./node_modules/rot-js/lib/scheduler/simple.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Simple; });\n/* harmony import */ var _scheduler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduler.js */ \"./node_modules/rot-js/lib/scheduler/scheduler.js\");\n\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nclass Simple extends _scheduler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/scheduler/simple.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/scheduler/speed.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/scheduler/speed.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Speed; });\n/* harmony import */ var _scheduler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduler.js */ \"./node_modules/rot-js/lib/scheduler/scheduler.js\");\n\n/**\n * @class Speed-based scheduler\n */\nclass Speed extends _scheduler_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/scheduler/speed.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/stringgenerator.js":
/*!****************************************************!*\
  !*** ./node_modules/rot-js/lib/stringgenerator.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StringGenerator; });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/rot-js/lib/rng.js\");\n\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nclass StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/stringgenerator.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/text.js":
/*!*****************************************!*\
  !*** ./node_modules/rot-js/lib/text.js ***!
  \*****************************************/
/*! exports provided: TYPE_TEXT, TYPE_NEWLINE, TYPE_FG, TYPE_BG, measure, tokenize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_TEXT\", function() { return TYPE_TEXT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_NEWLINE\", function() { return TYPE_NEWLINE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_FG\", function() { return TYPE_FG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_BG\", function() { return TYPE_BG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"measure\", function() { return measure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenize\", function() { return tokenize; });\n/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nconst TYPE_TEXT = 0;\nconst TYPE_NEWLINE = 1;\nconst TYPE_FG = 2;\nconst TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nfunction measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nfunction tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/text.js?");

/***/ }),

/***/ "./node_modules/rot-js/lib/util.js":
/*!*****************************************!*\
  !*** ./node_modules/rot-js/lib/util.js ***!
  \*****************************************/
/*! exports provided: mod, clamp, capitalize, format */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mod\", function() { return mod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return clamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capitalize\", function() { return capitalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"format\", function() { return format; });\n/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nfunction mod(x, n) {\n    return (x % n + n) % n;\n}\nfunction clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nfunction capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nfunction format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n\n\n//# sourceURL=webpack:///./node_modules/rot-js/lib/util.js?");

/***/ }),

/***/ "./node_modules/uuid/index.js":
/*!************************************!*\
  !*** ./node_modules/uuid/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ \"./node_modules/uuid/v1.js\");\nvar v4 = __webpack_require__(/*! ./v4 */ \"./node_modules/uuid/v4.js\");\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/index.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n\n//# sourceURL=webpack:///./node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./node_modules/uuid/v1.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v1.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/v1.js?");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n//# sourceURL=webpack:///./node_modules/uuid/v4.js?");

/***/ }),

/***/ "./src/actor/ai_actor.ts":
/*!*******************************!*\
  !*** ./src/actor/ai_actor.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AIActor = void 0;\nvar point3d_1 = __webpack_require__(/*! ../point3d */ \"./src/point3d.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar AIActor = /** @class */ (function () {\n    function AIActor(game, position, glyph) {\n        this.game = game;\n        this.position = position;\n        this.nextTargetCounter = 0;\n        this.notMovedCounter = 0;\n        this.nextTargetCounterMax = 10;\n        this.glyph = glyph;\n        this.type = 2 /* Clair */;\n    }\n    AIActor.prototype.act = function () {\n        this.notMovedCounter++;\n        if (!this.ensureTarget()) {\n            return Promise.resolve();\n        }\n        var pathTarget = this.game.warper.findTargetThroughWarps(this, this.target);\n        if (pathTarget == null) {\n            return Promise.resolve();\n        }\n        var astar = new rot_js_1.Path.AStar(pathTarget.x, pathTarget.y, this.game.onLevelNavigable(this.position.level, this.getUnlockPower()), { topology: 8 });\n        this.path = [];\n        astar.compute(this.position.x, this.position.y, this.pathCallback.bind(this));\n        this.path.shift(); // remove actor's position\n        if (this.path.length == 1) {\n            // last step\n            var lastStep = this.path[0];\n            var lastStep3d = new point3d_1.Point3D(this.position.level, lastStep.x, lastStep.y);\n            if (!this.game.mapIsPassable(lastStep3d)) {\n                // unreachable last step - remove\n                this.path = [];\n            }\n        }\n        if (this.path.length == 0) {\n            // done, or target unreachable - reset actor's target\n            this.target = null;\n            this.nextTargetCounter = rot_js_1.RNG.getUniformInt(this.nextTargetCounterMax / 2, this.nextTargetCounterMax);\n            return Promise.resolve();\n        }\n        var nextStep = this.path[0];\n        var nextStep3D = new point3d_1.Point3D(this.position.level, nextStep.x, nextStep.y);\n        if (!this.game.mapIsPassable(nextStep3D)) {\n            // probably doors to unlock\n            this.game.interact(this, nextStep3D);\n            return Promise.resolve();\n        }\n        if (this.game.occupiedByEnemy(nextStep3D)) {\n            return Promise.resolve();\n        }\n        if (this.game.getPlayerPosition().equals(nextStep3D)) {\n            this.playerIsStandingInWayCallback();\n            return Promise.resolve();\n        }\n        // moving to new position\n        this.position = nextStep3D;\n        this.notMovedCounter = -1;\n        if (this.catchPlayerCheck()) {\n            this.game.catchPlayer(this);\n        }\n        this.game.warper.tryActorLevelWarp(this);\n        return Promise.resolve();\n    };\n    AIActor.prototype.ensureTarget = function () {\n        if (this.notMovedCounter > this.nextTargetCounterMax) {\n            // forcing target change\n            this.target = this.game.getRandomTarget(this.targetFilter);\n        }\n        if (this.target == null) {\n            if (this.nextTargetCounter > 0) {\n                this.nextTargetCounter--;\n            }\n            else {\n                this.target = this.game.getRandomTarget(this.targetFilter);\n            }\n        }\n        return this.target != null;\n    };\n    AIActor.prototype.pathCallback = function (x, y) {\n        this.path.push(new point_1.Point(x, y));\n    };\n    return AIActor;\n}());\nexports.AIActor = AIActor;\n\n\n//# sourceURL=webpack:///./src/actor/ai_actor.ts?");

/***/ }),

/***/ "./src/actor/clair.ts":
/*!****************************!*\
  !*** ./src/actor/clair.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Clair = void 0;\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar ai_actor_1 = __webpack_require__(/*! ./ai_actor */ \"./src/actor/ai_actor.ts\");\nvar Clair = /** @class */ (function (_super) {\n    __extends(Clair, _super);\n    function Clair(game, position, name, unlockPower) {\n        var _this = _super.call(this, game, position, new glyph_1.Glyph(\"C\", \"#d6dbff\", \"\")) || this;\n        _this.unlockPower = unlockPower;\n        _this.type = 2 /* Clair */;\n        _this.name = name;\n        _this.unlockPower = unlockPower;\n        return _this;\n    }\n    Clair.prototype.getName = function () {\n        return this.name;\n    };\n    Clair.prototype.targetFilter = function (tile) {\n        if (tile.type == 7 /* Bed */)\n            return true;\n        if (tile.type == 8 /* Chair */)\n            return true;\n        return tile.type == 6 /* Bookshelf */;\n    };\n    Clair.prototype.catchPlayerCheck = function () {\n        // WIP\n        var myRoom = this.game.getPositionRoom(this.position);\n        if (myRoom == null) {\n            return false;\n        }\n        if (!myRoom.danger) {\n            return false;\n        }\n        var playerRoom = this.game.getPositionRoom(this.game.getPlayerPosition());\n        // standing in the same room as a player, room marked dangerous\n        return myRoom.equals(playerRoom);\n    };\n    Clair.prototype.playerIsStandingInWayCallback = function () {\n        this.game.addLogMessage(\"%c{\" + this.glyph.foregroundColor + \"}\" + this.name + \"%c{} is giving you a stern look - you are standing in her way!\");\n    };\n    Clair.prototype.getUnlockPower = function () {\n        return this.unlockPower;\n    };\n    return Clair;\n}(ai_actor_1.AIActor));\nexports.Clair = Clair;\n\n\n//# sourceURL=webpack:///./src/actor/clair.ts?");

/***/ }),

/***/ "./src/actor/helpers/clair_spawn_helper.ts":
/*!*************************************************!*\
  !*** ./src/actor/helpers/clair_spawn_helper.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClairSpawnHelper = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar clairsMap = {\n    \"Sanar\": 4,\n    \"Ryelle\": 4,\n    \"Sohrae\": 4,\n    \"Annisele\": 1,\n    \"Small Jasell\": 3,\n    \"Vancelle\": 5,\n    \"Ness\": 4,\n    \"Roslin\": 3,\n    \"Imshi\": 2,\n    \"Lealla\": 3,\n    \"Kimmeru\": 2,\n};\nvar ClairSpawnHelper = /** @class */ (function () {\n    function ClairSpawnHelper() {\n        this.clairList = [];\n        for (var clairName in clairsMap) {\n            this.clairList.push(clairName);\n        }\n        rot_js_1.RNG.shuffle(this.clairList);\n    }\n    ClairSpawnHelper.prototype.maxClairs = function () {\n        return this.clairList.length;\n    };\n    ClairSpawnHelper.prototype.getClair = function (index) {\n        var name = this.clairList[index];\n        return [name, clairsMap[name]];\n    };\n    return ClairSpawnHelper;\n}());\nexports.ClairSpawnHelper = ClairSpawnHelper;\n\n\n//# sourceURL=webpack:///./src/actor/helpers/clair_spawn_helper.ts?");

/***/ }),

/***/ "./src/actor/helpers/player_spawn_helper.ts":
/*!**************************************************!*\
  !*** ./src/actor/helpers/player_spawn_helper.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlayerSpawnHelper = void 0;\nvar room_tile_1 = __webpack_require__(/*! ../../tile/room_tile */ \"./src/tile/room_tile.ts\");\nvar player_1 = __webpack_require__(/*! ../player */ \"./src/actor/player.ts\");\nvar PlayerSpawnHelper = /** @class */ (function () {\n    function PlayerSpawnHelper(game) {\n        this.game = game;\n        this.spawnPoint = game.getRandomTarget(this.tileFilter);\n    }\n    PlayerSpawnHelper.prototype.tileFilter = function (tile) {\n        if (tile instanceof room_tile_1.RoomTile) {\n            return tile.roomProps.occupant != null && tile.roomProps.occupant instanceof player_1.Player;\n        }\n    };\n    PlayerSpawnHelper.prototype.getPlayerSpawnPoint = function () {\n        return this.spawnPoint;\n    };\n    return PlayerSpawnHelper;\n}());\nexports.PlayerSpawnHelper = PlayerSpawnHelper;\n\n\n//# sourceURL=webpack:///./src/actor/helpers/player_spawn_helper.ts?");

/***/ }),

/***/ "./src/actor/helpers/sendings_spawn_helper.ts":
/*!****************************************************!*\
  !*** ./src/actor/helpers/sendings_spawn_helper.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendingsSpawnHelper = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar sendingNames = ['Snarky', 'Old timey', 'Charterix', 'Randy', 'Rumbly', 'Pebble', 'Norman', 'Diamond'];\nvar SendingsSpawnHelper = /** @class */ (function () {\n    function SendingsSpawnHelper() {\n        this.nameList = [];\n        for (var i = 0; i < sendingNames.length; i++) {\n            this.nameList.push(sendingNames[i]);\n        }\n        rot_js_1.RNG.shuffle(this.nameList);\n    }\n    SendingsSpawnHelper.prototype.maxCount = function () {\n        return this.nameList.length;\n    };\n    SendingsSpawnHelper.prototype.getOne = function (index) {\n        return this.nameList[index];\n    };\n    return SendingsSpawnHelper;\n}());\nexports.SendingsSpawnHelper = SendingsSpawnHelper;\n\n\n//# sourceURL=webpack:///./src/actor/helpers/sendings_spawn_helper.ts?");

/***/ }),

/***/ "./src/actor/kirrith_primitive.ts":
/*!****************************************!*\
  !*** ./src/actor/kirrith_primitive.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KirrithPrimitive = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar point3d_1 = __webpack_require__(/*! ../point3d */ \"./src/point3d.ts\");\nvar KirrithPrimitive = /** @class */ (function () {\n    function KirrithPrimitive(game, position) {\n        this.game = game;\n        this.position = position;\n        this.glyph = new glyph_1.Glyph(\"K\", \"#f00\", \"\");\n        this.type = 3 /* Kirrith */;\n    }\n    KirrithPrimitive.prototype.act = function () {\n        var playerPosition = this.game.getPlayerPosition();\n        var target = this.game.warper.findTargetThroughWarps(this, playerPosition);\n        if (target == null) {\n            return Promise.resolve();\n        }\n        var astar = new rot_js_1.Path.AStar(target.x, target.y, this.game.onLevelNavigable(this.position.level, 1), { topology: 8 });\n        this.path = [];\n        if (this.game.statusLine.turns == this.game.statusLine.turnsMax) {\n            // warn the player\n            this.game.addLogMessage(\"You should go to your bed, %c{\" + this.glyph.foregroundColor + \"}\" + this.getName() + \"%c{} must not catch you!\");\n        }\n        if (this.game.statusLine.turns >= this.game.statusLine.turnsMax) {\n            // activate Kirrith when time's up\n            astar.compute(this.position.x, this.position.y, this.pathCallback.bind(this));\n        }\n        this.path.shift(); // remove actor position\n        if (this.path.length > 0) {\n            var nextStep = this.path[0];\n            var nextStep3D = new point3d_1.Point3D(this.position.level, nextStep.x, nextStep.y);\n            if (!this.game.mapIsPassable(nextStep3D)) {\n                // probably doors to unlock\n                this.game.interact(this, nextStep3D);\n                return Promise.resolve();\n            }\n            if (!this.game.occupiedByEnemy(nextStep3D)) {\n                this.position = nextStep3D;\n            }\n        }\n        if (this.catchPlayerCheck()) {\n            this.game.catchPlayer(this);\n        }\n        this.game.warper.tryActorLevelWarp(this);\n        return Promise.resolve();\n    };\n    KirrithPrimitive.prototype.pathCallback = function (x, y) {\n        this.path.push(new point_1.Point(x, y));\n    };\n    KirrithPrimitive.prototype.catchPlayerCheck = function () {\n        var playerPosition = this.game.getPlayerPosition();\n        if (playerPosition.equals(this.position))\n            return true;\n        var myRoom = this.game.getPositionRoom(this.position);\n        if (myRoom == null) {\n            return false;\n        }\n        if (!myRoom.danger) {\n            return false;\n        }\n        var playerRoom = this.game.getPositionRoom(playerPosition);\n        // standing in the same room as a player, room marked dangerous\n        return myRoom.equals(playerRoom);\n    };\n    KirrithPrimitive.prototype.getName = function () {\n        return \"Aunt Kirrith\";\n    };\n    KirrithPrimitive.prototype.getUnlockPower = function () {\n        return 2;\n    };\n    return KirrithPrimitive;\n}());\nexports.KirrithPrimitive = KirrithPrimitive;\n\n\n//# sourceURL=webpack:///./src/actor/kirrith_primitive.ts?");

/***/ }),

/***/ "./src/actor/player.ts":
/*!*****************************!*\
  !*** ./src/actor/player.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Player = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar input_utility_1 = __webpack_require__(/*! ../input-utility */ \"./src/input-utility.ts\");\nvar point3d_1 = __webpack_require__(/*! ../point3d */ \"./src/point3d.ts\");\nvar clair_1 = __webpack_require__(/*! ./clair */ \"./src/actor/clair.ts\");\nvar sending_1 = __webpack_require__(/*! ./sending */ \"./src/actor/sending.ts\");\nvar kirrith_primitive_1 = __webpack_require__(/*! ./kirrith_primitive */ \"./src/actor/kirrith_primitive.ts\");\nvar Player = /** @class */ (function () {\n    function Player(game, position) {\n        this.game = game;\n        this.position = position;\n        this.glyph = new glyph_1.Glyph(\"@\", \"#d95763\");\n        this.type = 0 /* Player */;\n        this.keyMap = {};\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD8] = 0; // up\n        this.keyMap[rot_js_1.KEYS.VK_UP] = 0;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD9] = 1;\n        this.keyMap[rot_js_1.KEYS.VK_PAGE_UP] = 1;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD6] = 2; // right\n        this.keyMap[rot_js_1.KEYS.VK_RIGHT] = 2;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD3] = 3;\n        this.keyMap[rot_js_1.KEYS.VK_PAGE_DOWN] = 3;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD2] = 4; // down\n        this.keyMap[rot_js_1.KEYS.VK_DOWN] = 4;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD1] = 5;\n        this.keyMap[rot_js_1.KEYS.VK_END] = 5;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD4] = 6; // left\n        this.keyMap[rot_js_1.KEYS.VK_LEFT] = 6;\n        this.keyMap[rot_js_1.KEYS.VK_NUMPAD7] = 7;\n        this.keyMap[rot_js_1.KEYS.VK_HOME] = 7;\n    }\n    Player.prototype.act = function () {\n        return input_utility_1.InputUtility.waitForInput(this.handleInput.bind(this));\n    };\n    Player.prototype.handleInput = function (event) {\n        var validInput = false;\n        var code = event.keyCode;\n        if (code in this.keyMap) {\n            var diff = rot_js_1.DIRS[8][this.keyMap[code]];\n            var newPoint = new point_1.Point(this.position.x + diff[0], this.position.y + diff[1]);\n            var newPoint3d = new point3d_1.Point3D(this.position.level, newPoint.x, newPoint.y);\n            if (this.hasModifier(event)) {\n                return this.checkInteraction(newPoint3d);\n            }\n            if (!this.game.mapIsPassable(newPoint3d)) {\n                return this.checkInteraction(newPoint3d);\n            }\n            var npcInWay = this.game.getNpcOn(newPoint3d);\n            if (npcInWay != null) {\n                return this.interactWith(npcInWay);\n            }\n            this.position = newPoint3d;\n            this.game.warper.tryActorLevelWarp(this);\n            validInput = true;\n        }\n        else {\n            validInput = (code === rot_js_1.KEYS.VK_NUMPAD5) || (code === rot_js_1.KEYS.VK_SPACE); // Wait a turn\n        }\n        return validInput;\n    };\n    Player.prototype.hasModifier = function (e) {\n        return (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey);\n    };\n    Player.prototype.checkInteraction = function (target) {\n        return this.game.interact(this, target);\n    };\n    Player.prototype.getName = function () {\n        return \"Lirael\";\n    };\n    Player.prototype.getUnlockPower = function () {\n        return 2;\n    };\n    Player.prototype.interactWith = function (npcInWay) {\n        if (npcInWay instanceof kirrith_primitive_1.KirrithPrimitive) {\n            this.game.addLogMessage(\"There is no way to reasonably talk with %c{\" + npcInWay.glyph.foregroundColor + \"}\" + npcInWay.getName() + \"%c{}!\");\n            return true;\n        }\n        if (npcInWay instanceof clair_1.Clair) {\n            this.game.addLogMessage(\"You bump into %c{\" + npcInWay.glyph.foregroundColor + \"}\" + npcInWay.getName() + \"%c{}. Rude!\");\n            return true;\n        }\n        if (npcInWay instanceof sending_1.Sending) {\n            this.game.addLogMessage(\"You say Hi! to %c{\" + npcInWay.glyph.foregroundColor + \"}\" + npcInWay.getName() + \"%c{}.\");\n            return true;\n        }\n        return false;\n    };\n    return Player;\n}());\nexports.Player = Player;\n\n\n//# sourceURL=webpack:///./src/actor/player.ts?");

/***/ }),

/***/ "./src/actor/sending.ts":
/*!******************************!*\
  !*** ./src/actor/sending.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sending = void 0;\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar ai_actor_1 = __webpack_require__(/*! ./ai_actor */ \"./src/actor/ai_actor.ts\");\nvar Sending = /** @class */ (function (_super) {\n    __extends(Sending, _super);\n    function Sending(game, position, name) {\n        var _this = _super.call(this, game, position, new glyph_1.Glyph(\"S\", \"#b700ff\", \"\")) || this;\n        _this.type = 1 /* Sending */;\n        _this.name = name;\n        return _this;\n    }\n    Sending.prototype.targetFilter = function (tile) {\n        return tile.type == 6 /* Bookshelf */;\n    };\n    Sending.prototype.catchPlayerCheck = function () {\n        return false;\n    };\n    Sending.prototype.playerIsStandingInWayCallback = function () {\n        // nothing\n    };\n    Sending.prototype.getName = function () {\n        return this.name;\n    };\n    Sending.prototype.getUnlockPower = function () {\n        return 2;\n    };\n    return Sending;\n}(ai_actor_1.AIActor));\nexports.Sending = Sending;\n\n\n//# sourceURL=webpack:///./src/actor/sending.ts?");

/***/ }),

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_1 = __webpack_require__(/*! ./game */ \"./src/game.ts\");\ndocument.body.onload = function () {\n    var game = new game_1.Game();\n};\n\n\n//# sourceURL=webpack:///./src/app.ts?");

/***/ }),

/***/ "./src/background.ts":
/*!***************************!*\
  !*** ./src/background.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Background = void 0;\nvar simplex_1 = __webpack_require__(/*! rot-js/lib/noise/simplex */ \"./node_modules/rot-js/lib/noise/simplex.js\");\nvar glyph_1 = __webpack_require__(/*! ./glyph */ \"./src/glyph.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar chars = [\"#\", \"#\", '#', '/', \" \", \"\\\\\", \"(\", \")\"];\nvar colors = [\"#2d3c4f\", \"#294146\", \"#254352\", \"#284241\",\n    \"#203f3f\", \"#254c59\", \"#324c50\", \"#073e46\"];\nvar Background = /** @class */ (function () {\n    function Background() {\n        this.noiseMap = {};\n        this.glyphMap = {};\n        this.backgroundMap = {};\n    }\n    Background.prototype.getOrCreateGlyph = function (key) {\n        if (this.glyphMap[key] == null) {\n            this.glyphMap[key] = new glyph_1.Glyph(rot_js_1.RNG.getItem(chars), rot_js_1.RNG.getItem(colors));\n        }\n        return this.glyphMap[key];\n    };\n    Background.prototype.getGlyph = function (level, x, y) {\n        var backgroundMapKey = this.toXYKey(level, x, y);\n        if (this.backgroundMap[backgroundMapKey] == null) {\n            var noise = this.getNoise(level, x, y);\n            this.backgroundMap[backgroundMapKey] = \"\" + noise;\n        }\n        return this.getOrCreateGlyph(this.backgroundMap[backgroundMapKey]);\n    };\n    Background.prototype.getNoise = function (level1, x, y) {\n        var key = this.toKey(level1);\n        if (this.noiseMap[key] == null) {\n            this.noiseMap[key] = new simplex_1.default();\n        }\n        return Math.floor(this.noiseMap[key].get(x / 10, y / 10) * 10);\n    };\n    Background.prototype.toKey = function (level) {\n        return \"\" + level;\n    };\n    Background.prototype.toXYKey = function (level, x, y) {\n        return level + \";\" + x + \";\" + y;\n    };\n    return Background;\n}());\nexports.Background = Background;\n\n\n//# sourceURL=webpack:///./src/background.ts?");

/***/ }),

/***/ "./src/display_sizing.ts":
/*!*******************************!*\
  !*** ./src/display_sizing.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DisplaySizing = void 0;\nvar DisplaySizing = /** @class */ (function () {\n    function DisplaySizing(center, topLeft, bottomRight) {\n        this.center = center;\n        this.topLeft = topLeft;\n        this.bottomRight = bottomRight;\n    }\n    DisplaySizing.prototype.checkFits = function (position) {\n        if (position.x < this.topLeft.x || position.x > this.bottomRight.x)\n            return false;\n        return !(position.y < this.topLeft.y || position.y > this.bottomRight.y);\n    };\n    return DisplaySizing;\n}());\nexports.DisplaySizing = DisplaySizing;\n\n\n//# sourceURL=webpack:///./src/display_sizing.ts?");

/***/ }),

/***/ "./src/game-state.ts":
/*!***************************!*\
  !*** ./src/game-state.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GameState = void 0;\nvar GameState = /** @class */ (function () {\n    function GameState() {\n        this.reset();\n    }\n    GameState.prototype.reset = function () {\n        this.backToBed = false;\n        this.playerWasCaught = false;\n    };\n    GameState.prototype.doStartNextRound = function () {\n        return this.backToBed;\n    };\n    GameState.prototype.doRestartGame = function () {\n        return this.playerWasCaught;\n    };\n    GameState.prototype.isGameOver = function () {\n        return this.backToBed || this.playerWasCaught;\n    };\n    return GameState;\n}());\nexports.GameState = GameState;\n\n\n//# sourceURL=webpack:///./src/game-state.ts?");

/***/ }),

/***/ "./src/game.ts":
/*!*********************!*\
  !*** ./src/game.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Game = void 0;\nvar index_1 = __webpack_require__(/*! rot-js/lib/index */ \"./node_modules/rot-js/lib/index.js\");\nvar player_1 = __webpack_require__(/*! ./actor/player */ \"./src/actor/player.ts\");\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar game_state_1 = __webpack_require__(/*! ./game-state */ \"./src/game-state.ts\");\nvar status_line_1 = __webpack_require__(/*! ./status-line */ \"./src/status-line.ts\");\nvar message_log_1 = __webpack_require__(/*! ./message-log */ \"./src/message-log.ts\");\nvar input_utility_1 = __webpack_require__(/*! ./input-utility */ \"./src/input-utility.ts\");\nvar display_sizing_1 = __webpack_require__(/*! ./display_sizing */ \"./src/display_sizing.ts\");\nvar multimap_1 = __webpack_require__(/*! ./multimap */ \"./src/multimap.ts\");\nvar point3d_1 = __webpack_require__(/*! ./point3d */ \"./src/point3d.ts\");\nvar warper_1 = __webpack_require__(/*! ./warper */ \"./src/warper.ts\");\nvar sending_1 = __webpack_require__(/*! ./actor/sending */ \"./src/actor/sending.ts\");\nvar room_tile_1 = __webpack_require__(/*! ./tile/room_tile */ \"./src/tile/room_tile.ts\");\nvar room_decorator_1 = __webpack_require__(/*! ./room/room_decorator */ \"./src/room/room_decorator.ts\");\nvar clair_1 = __webpack_require__(/*! ./actor/clair */ \"./src/actor/clair.ts\");\nvar clair_spawn_helper_1 = __webpack_require__(/*! ./actor/helpers/clair_spawn_helper */ \"./src/actor/helpers/clair_spawn_helper.ts\");\nvar sendings_spawn_helper_1 = __webpack_require__(/*! ./actor/helpers/sendings_spawn_helper */ \"./src/actor/helpers/sendings_spawn_helper.ts\");\nvar bookshelf_1 = __webpack_require__(/*! ./tile/bookshelf */ \"./src/tile/bookshelf.ts\");\nvar player_spawn_helper_1 = __webpack_require__(/*! ./actor/helpers/player_spawn_helper */ \"./src/actor/helpers/player_spawn_helper.ts\");\nvar kirrith_primitive_1 = __webpack_require__(/*! ./actor/kirrith_primitive */ \"./src/actor/kirrith_primitive.ts\");\nvar background_1 = __webpack_require__(/*! ./background */ \"./src/background.ts\");\nvar Game = /** @class */ (function () {\n    function Game() {\n        this.textLines = 4;\n        this.foregroundColor = \"white\";\n        this.backgroundColor = \"black\";\n        this.maximumTurns = 360;\n        this.successfulNumberOfBooks = 20;\n        this.gameSize = { width: 75, height: 27 };\n        this.displaySizing = new display_sizing_1.DisplaySizing(new point_1.Point(Math.floor(this.gameSize.width / 2), Math.ceil((this.gameSize.height - this.textLines) / 2)), new point_1.Point(0, 0), new point_1.Point(this.gameSize.width, this.gameSize.height - this.textLines - 2));\n        this.mapSize = { width: this.gameSize.width, height: this.gameSize.height - this.textLines - 1 };\n        this.statusLinePosition = new point_1.Point(0, this.gameSize.height - this.textLines - 1);\n        this.actionLogPosition = new point_1.Point(0, this.gameSize.height - this.textLines);\n        this.background = new background_1.Background();\n        this.display = new index_1.Display({\n            width: this.gameSize.width,\n            height: this.gameSize.height,\n            fontSize: 20\n        });\n        document.body.appendChild(this.display.getContainer());\n        this.gameState = new game_state_1.GameState();\n        this.multimap = new multimap_1.Multimap(this);\n        this.statusLine = new status_line_1.StatusLine(this, this.statusLinePosition, this.gameSize.width, { maxBoxes: this.maximumTurns });\n        this.messageLog = new message_log_1.MessageLog(this, this.actionLogPosition, this.gameSize.width, this.textLines);\n        this.warper = new warper_1.Warper(this.multimap, this);\n        this.initializeGame();\n        this.mainLoop();\n    }\n    Game.prototype.drawWithCheck = function (playerPosition, displaySizing, position, glyph) {\n        var origin = playerPosition.reverse().plus(displaySizing.center);\n        var drawnPosition = position.plus(origin);\n        if (displaySizing.checkFits(drawnPosition)) {\n            this.draw(drawnPosition, glyph);\n        }\n    };\n    Game.prototype.draw = function (position, glyph) {\n        var foreground = glyph.foregroundColor || this.foregroundColor;\n        var background = glyph.backgroundColor || this.backgroundColor;\n        this.display.draw(position.x, position.y, glyph.character, foreground, background);\n    };\n    Game.prototype.drawText = function (position, text, maxWidth) {\n        this.display.drawText(position.x, position.y, text, maxWidth);\n    };\n    Game.prototype.mapIsPassable = function (point) {\n        return this.multimap.isPassable(point);\n    };\n    Game.prototype.onLevelNavigable = function (level, unlockStrength) {\n        var map = this.multimap.getMap(level);\n        return function (x, y) { return map.isNavigable(x, y, unlockStrength); };\n    };\n    Game.prototype.occupiedByEnemy = function (point) {\n        for (var _i = 0, _a = this.npcList; _i < _a.length; _i++) {\n            var npc = _a[_i];\n            if (npc.position.equals(point)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Game.prototype.getNpcOn = function (point) {\n        for (var _i = 0, _a = this.npcList; _i < _a.length; _i++) {\n            var npc = _a[_i];\n            if (point.equals(npc.position)) {\n                return npc;\n            }\n        }\n        return null;\n    };\n    Game.prototype.getPlayerPosition = function () {\n        return this.player.position;\n    };\n    Game.prototype.endTheGameReachingBed = function () {\n        this.messageLog.appendText(\"Try again with 'spacebar' or 'return'.\");\n        this.messageLog.appendText(\"...\");\n        var books = this.statusLine.booksFound;\n        if (books >= this.successfulNumberOfBooks) {\n            this.messageLog.appendText(\"Congratulation! There will be a clue about the %c{#d6dbff}Sight%c{} in those books!\");\n        }\n        else if (books >= this.successfulNumberOfBooks * 0.85) {\n            this.messageLog.appendText(\"Good work! It will probably help in \" + this.player.getName() + \"'s next adventures.\");\n        }\n        else {\n            var bookRef = books > 1 ? \"those books\" : \"this book\";\n            this.messageLog.appendText(\"Yikes! There is only description of horrible monsters in \" + bookRef + \"!\");\n        }\n        var bookPlural = books > 1 ? \"books\" : \"book\";\n        this.messageLog.appendText(\"You have reached safety of your bed with %c{\" + status_line_1.bookNumberColor + \"}\" + books + \" \" + bookPlural + \"%c{} to study.\");\n        this.gameState.backToBed = true;\n    };\n    Game.prototype.interact = function (actor, target) {\n        var tile = this.multimap.getTile(target);\n        if (tile == null)\n            return false;\n        return tile.interactWith(actor, this);\n    };\n    Game.prototype.catchPlayer = function (actor) {\n        this.messageLog.appendText(\"Try again with 'spacebar' or 'return'.\");\n        this.messageLog.appendText(\"...\");\n        this.messageLog.appendText(\"%c{#f00}Game over%c{} - you were captured by \" + actor.getName() + \"!\");\n        var kirrithText = actor instanceof kirrith_primitive_1.KirrithPrimitive ? \" You should be in your bed!\" : \"\";\n        this.messageLog.appendText(\"%c{\" + actor.glyph.foregroundColor + \"}\" + actor.getName() + \":%c{} what are you doing here, \" + this.player.getName() + \"?\" + kirrithText);\n        this.gameState.playerWasCaught = true;\n    };\n    Game.prototype.getRandomTilePositions = function (type, quantity) {\n        if (quantity === void 0) { quantity = 1; }\n        return this.multimap.getRandomTilePositions(type, quantity);\n    };\n    Game.prototype.getRandomTarget = function (filter) {\n        return this.multimap.getRandomTargets(filter, 1)[0];\n    };\n    Game.prototype.initializeGame = function () {\n        this.display.clear();\n        this.messageLog.clear();\n        this.resetStatusLine();\n        this.writeHelpMessage();\n        this.gameState.reset();\n        this.multimap.generateMultimap(this.mapSize.width, this.mapSize.height);\n        this.createBeings();\n        this.scheduler = new index_1.Scheduler.Simple();\n        this.scheduler.add(this.player, true);\n        for (var _i = 0, _a = this.npcList; _i < _a.length; _i++) {\n            var npc = _a[_i];\n            this.scheduler.add(npc, true);\n        }\n        this.drawPanel();\n    };\n    Game.prototype.mainLoop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var actor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (false) {}\n                        actor = this.scheduler.next();\n                        if (!actor) {\n                            return [3 /*break*/, 4];\n                        }\n                        return [4 /*yield*/, actor.act()];\n                    case 1:\n                        _a.sent();\n                        if (actor.type === 0 /* Player */) {\n                            this.statusLine.turns += 1;\n                        }\n                        if (this.gameState.backToBed) {\n                            this.statusLine.night += 1;\n                        }\n                        this.drawPanel();\n                        if (!this.gameState.isGameOver()) return [3 /*break*/, 3];\n                        return [4 /*yield*/, input_utility_1.InputUtility.waitForInput(this.handleInput.bind(this))];\n                    case 2:\n                        _a.sent();\n                        this.initializeGame();\n                        _a.label = 3;\n                    case 3: return [3 /*break*/, 0];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Game.prototype.drawPanel = function () {\n        this.display.clear();\n        // somewhat confusing view of neighbour levels\n        var levelsToShow = this.getLevelsToShow();\n        var xDivide = this.displaySizing.center.x - this.player.position.x;\n        for (var j = this.displaySizing.topLeft.y; j < this.displaySizing.bottomRight.y; j++) {\n            var leftBackgroundLevel = levelsToShow.left != null ? levelsToShow.left : levelsToShow.right;\n            for (var i = this.displaySizing.topLeft.x; i < xDivide; i++) {\n                this.draw(new point_1.Point(i, j), this.background.getGlyph(leftBackgroundLevel, i + this.player.position.x, j + this.player.position.y));\n            }\n            var rightBackgroundLevel = levelsToShow.right != null ? levelsToShow.right : levelsToShow.left;\n            for (var i = xDivide; i < this.displaySizing.bottomRight.x; i++) {\n                this.draw(new point_1.Point(i, j), this.background.getGlyph(rightBackgroundLevel, i + this.player.position.x, j + this.player.position.y));\n            }\n        }\n        var left = levelsToShow.left, right = levelsToShow.right;\n        for (var _i = 0, _a = [left, right]; _i < _a.length; _i++) {\n            var level = _a[_i];\n            var levelMap = this.multimap.getMap(level);\n            if (levelMap != null) {\n                levelMap.draw(this.player.position.toPoint(), this.displaySizing);\n            }\n        }\n        this.statusLine.draw();\n        this.messageLog.draw();\n        this.drawWithCheck(this.player.position.toPoint(), this.displaySizing, this.player.position.toPoint(), this.player.glyph);\n        for (var _b = 0, _c = this.npcList; _b < _c.length; _b++) {\n            var enemy = _c[_b];\n            if (enemy.position == null) {\n                console.warn(enemy.getName() + \"did not spawned!\");\n                continue;\n            }\n            if ([left, right].indexOf(enemy.position.level) >= 0) {\n                this.drawWithCheck(this.player.position.toPoint(), this.displaySizing, enemy.position.toPoint(), enemy.glyph);\n            }\n        }\n    };\n    Game.prototype.getLevelsToShow = function () {\n        var result = { left: null, right: null };\n        if (this.player.position.x >= 0) {\n            if (this.player.position.y < 0) {\n                result.left = this.player.position.level + 1;\n            }\n            else {\n                result.left = this.player.position.level - 1;\n            }\n            result.right = this.player.position.level;\n            return result;\n        }\n        else {\n            if (this.player.position.y > 0) {\n                result.right = this.player.position.level + 1;\n            }\n            else {\n                result.right = this.player.position.level - 1;\n            }\n            result.left = this.player.position.level;\n            return result;\n        }\n    };\n    Game.prototype.handleInput = function (event) {\n        var code = event.keyCode;\n        return code === index_1.KEYS.VK_SPACE || code === index_1.KEYS.VK_RETURN;\n    };\n    Game.prototype.writeHelpMessage = function () {\n        var dummyClair = new clair_1.Clair(this, new point3d_1.Point3D(0, 0, 0), \"Dummy\", 0);\n        var helpMessage = [\n            \"Find some interesting books in library %c{\" + bookshelf_1.basicColor + \"}bookshelves%c{}.\",\n            \"Move with numpad, search %c{\" + bookshelf_1.basicColor + \"}bookshelves%c{} by walking into them'.\",\n            \"Interact with doors with CTRL, SHIFT, ALT or META + numpad\",\n            \"Watch out for %c{\" + dummyClair.glyph.foregroundColor + \"}Clairs%c{} in %c{\" + room_tile_1.dangerColor + \"}restricted areas%c{}!\"\n        ];\n        for (var index = helpMessage.length - 1; index >= 0; --index) {\n            this.messageLog.appendText(helpMessage[index]);\n        }\n    };\n    Game.prototype.addLogMessage = function (message) {\n        this.messageLog.appendText(message);\n    };\n    Game.prototype.getPositionRoom = function (position) {\n        var tile = this.multimap.getTile(position);\n        if (tile instanceof room_tile_1.RoomTile) {\n            return tile.roomProps;\n        }\n        return null;\n    };\n    Game.prototype.createBeings = function () {\n        this.npcList = [];\n        this.spawnPlayer();\n        this.spawnKirrith();\n        this.createSendings();\n        var clairs = this.createClairs();\n        this.multimap.assignBedrooms(clairs);\n    };\n    Game.prototype.spawnPlayer = function () {\n        this.player = new player_1.Player(this, null);\n        this.multimap.assignBedrooms([this.player]);\n        var spawnHelper = new player_spawn_helper_1.PlayerSpawnHelper(this);\n        this.player.position = spawnHelper.getPlayerSpawnPoint();\n    };\n    Game.prototype.spawnKirrith = function () {\n        var fallbackPosition = this.getRandomTilePositions(0 /* Floor */)[0];\n        var kirrith = new kirrith_primitive_1.KirrithPrimitive(this, fallbackPosition);\n        this.multimap.assignBedrooms([kirrith]);\n        var roomPosition = this.getRandomTarget(function (tile) { return (tile instanceof room_tile_1.RoomTile) && tile.roomProps.occupant == kirrith; });\n        kirrith.position = roomPosition != null ? roomPosition : kirrith.position;\n        this.npcList.push(kirrith);\n    };\n    Game.prototype.createSendings = function () {\n        var nameHelper = new sendings_spawn_helper_1.SendingsSpawnHelper();\n        var numberOfSendings = nameHelper.maxCount();\n        var positions = this.multimap.getRandomTargets(function (tile) { return (tile instanceof room_tile_1.RoomTile && tile.roomProps.type == room_decorator_1.RoomType.LIBRARY); }, numberOfSendings);\n        for (var i = 0; i < positions.length; i++) {\n            var sending = new sending_1.Sending(this, positions[i], nameHelper.getOne(i));\n            this.npcList.push(sending);\n        }\n    };\n    Game.prototype.createClairs = function () {\n        var clairsList = [];\n        var clairSpawnHelper = new clair_spawn_helper_1.ClairSpawnHelper();\n        var numberOfClairs = clairSpawnHelper.maxClairs();\n        var positions = this.multimap.getRandomTargets(function (tile) { return (tile instanceof room_tile_1.RoomTile); }, numberOfClairs);\n        for (var i = 0; i < positions.length; i++) {\n            var _a = clairSpawnHelper.getClair(i), name_1 = _a[0], power = _a[1];\n            var clair = new clair_1.Clair(this, positions[i], name_1, power);\n            clairsList.push(clair);\n            this.npcList.push(clair);\n        }\n        return clairsList;\n    };\n    Game.prototype.resetStatusLine = function () {\n        this.statusLine.reset();\n        this.statusLine.turnsMax = this.maximumTurns;\n    };\n    return Game;\n}());\nexports.Game = Game;\n\n\n//# sourceURL=webpack:///./src/game.ts?");

/***/ }),

/***/ "./src/glyph.ts":
/*!**********************!*\
  !*** ./src/glyph.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Glyph = void 0;\nvar Glyph = /** @class */ (function () {\n    function Glyph(character, foregroundColor, backgroundColor) {\n        this.character = character;\n        this.foregroundColor = foregroundColor;\n        this.backgroundColor = backgroundColor;\n    }\n    return Glyph;\n}());\nexports.Glyph = Glyph;\n\n\n//# sourceURL=webpack:///./src/glyph.ts?");

/***/ }),

/***/ "./src/input-utility.ts":
/*!******************************!*\
  !*** ./src/input-utility.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputUtility = void 0;\nvar InputUtility = /** @class */ (function () {\n    function InputUtility() {\n    }\n    InputUtility.waitForInput = function (handleInput) {\n        return new Promise(function (resolve) {\n            if (InputUtility.processInputCallback !== undefined) {\n                InputUtility.stopProcessing();\n            }\n            InputUtility.resolve = resolve;\n            InputUtility.processInputCallback = function (event) { return InputUtility.processInput(event, handleInput); };\n            window.addEventListener(\"keydown\", InputUtility.processInputCallback);\n        });\n    };\n    InputUtility.processInput = function (event, handleInput) {\n        if (handleInput(event)) {\n            InputUtility.stopProcessing();\n        }\n    };\n    InputUtility.stopProcessing = function () {\n        window.removeEventListener(\"keydown\", InputUtility.processInputCallback);\n        InputUtility.processInputCallback = undefined;\n        InputUtility.resolve();\n    };\n    return InputUtility;\n}());\nexports.InputUtility = InputUtility;\n\n\n//# sourceURL=webpack:///./src/input-utility.ts?");

/***/ }),

/***/ "./src/map.ts":
/*!********************!*\
  !*** ./src/map.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Map = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar tile_1 = __webpack_require__(/*! ./tile/tile */ \"./src/tile/tile.ts\");\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar door_1 = __webpack_require__(/*! ./tile/door */ \"./src/tile/door.ts\");\nvar warptile_1 = __webpack_require__(/*! ./tile/warptile */ \"./src/tile/warptile.ts\");\nvar Map = /** @class */ (function () {\n    function Map(game) {\n        this.game = game;\n        this.map = {};\n    }\n    Map.prototype.setTile = function (x, y, tile) {\n        this.map[this.coordinatesToKey(x, y)] = tile;\n    };\n    Map.prototype.getRandomTilePositions = function (type, quantity) {\n        if (quantity === void 0) { quantity = 1; }\n        var buffer = [];\n        var result = [];\n        for (var key in this.map) {\n            if (this.map[key].type === type) {\n                buffer.push(this.keyToPoint(key));\n            }\n        }\n        var index;\n        while (buffer.length > 0 && result.length < quantity) {\n            index = Math.floor(rot_js_1.RNG.getUniform() * buffer.length);\n            result.push(buffer.splice(index, 1)[0]);\n        }\n        return result;\n    };\n    Map.prototype.getTileType = function (x, y) {\n        return this.map[this.coordinatesToKey(x, y)].type;\n    };\n    Map.prototype.getTile = function (x, y) {\n        return this.map[this.coordinatesToKey(x, y)];\n    };\n    Map.prototype.isPassable = function (x, y) {\n        var tile = this.getTile(x, y);\n        if (tile == null)\n            return false;\n        return tile.isPassable();\n    };\n    Map.prototype.isNavigable = function (x, y, unlockStrength) {\n        var tile = this.getTile(x, y);\n        if (tile == null)\n            return false;\n        if (tile instanceof door_1.Door) {\n            return tile.locked <= unlockStrength;\n        }\n        return tile.isPassable();\n    };\n    Map.prototype.draw = function (playerPosition, displaySizing) {\n        var origin = playerPosition.reverse().plus(displaySizing.center);\n        for (var key in this.map) {\n            var position = this.keyToPoint(key).plus(origin);\n            if (!displaySizing.checkFits(position)) {\n                continue;\n            }\n            var mapElement = this.map[key];\n            if (mapElement instanceof warptile_1.WarpTile) {\n                continue;\n            }\n            this.game.draw(position, mapElement.glyph);\n        }\n    };\n    Map.prototype.coordinatesToKey = function (x, y) {\n        return x + \",\" + y;\n    };\n    Map.prototype.iteratePointsAndTiles = function (callback) {\n        for (var mapKey in this.map) {\n            var keyPoint = this.keyToPoint(mapKey);\n            var keyTile = this.map[mapKey];\n            callback(keyPoint, keyTile);\n        }\n    };\n    Map.prototype.enlarge = function () {\n        var newTiles = {};\n        for (var mapKey in this.map) {\n            var point = this.keyToPoint(mapKey);\n            for (var i = -1; i <= 1; i++) {\n                for (var j = -1; j <= 1; j++) {\n                    if (i == 0 && j == 0)\n                        continue;\n                    var enlargedKey = this.coordinatesToKey(point.x + i, point.y + j);\n                    newTiles[enlargedKey] = 0; // dummy value\n                }\n            }\n        }\n        // enlarge with empty tile\n        for (var mapKey in newTiles) {\n            if (this.map[mapKey] == null) {\n                this.map[mapKey] = tile_1.Tile.empty;\n            }\n        }\n    };\n    Map.prototype.keyToPoint = function (key) {\n        var parts = key.split(\",\");\n        return new point_1.Point(parseInt(parts[0]), parseInt(parts[1]));\n    };\n    return Map;\n}());\nexports.Map = Map;\n\n\n//# sourceURL=webpack:///./src/map.ts?");

/***/ }),

/***/ "./src/message-log.ts":
/*!****************************!*\
  !*** ./src/message-log.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageLog = void 0;\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar MessageLog = /** @class */ (function () {\n    function MessageLog(game, position, maxWidth, maxLines) {\n        this.game = game;\n        this.position = position;\n        this.maxWidth = maxWidth;\n        this.maxLines = maxLines;\n        this.lines = [];\n    }\n    MessageLog.prototype.clear = function () {\n        this.lines = [];\n    };\n    MessageLog.prototype.appendText = function (text) {\n        this.lines.splice(0, 0, text);\n        if (this.lines.length > this.maxLines) {\n            this.lines.splice(this.maxLines, this.lines.length - this.maxLines);\n        }\n    };\n    MessageLog.prototype.draw = function () {\n        var linePosition = new point_1.Point(this.position.x, this.position.y);\n        for (var index = 0; index < this.maxLines && index < this.lines.length; ++index) {\n            this.game.drawText(linePosition, this.lines[index], this.maxWidth);\n            ++linePosition.y;\n        }\n    };\n    return MessageLog;\n}());\nexports.MessageLog = MessageLog;\n\n\n//# sourceURL=webpack:///./src/message-log.ts?");

/***/ }),

/***/ "./src/multimap.ts":
/*!*************************!*\
  !*** ./src/multimap.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Multimap = void 0;\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar map_1 = __webpack_require__(/*! ./map */ \"./src/map.ts\");\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar spiral_part_1 = __webpack_require__(/*! ./spiral_part */ \"./src/spiral_part.ts\");\nvar point3d_1 = __webpack_require__(/*! ./point3d */ \"./src/point3d.ts\");\nvar warptile_1 = __webpack_require__(/*! ./tile/warptile */ \"./src/tile/warptile.ts\");\nvar rooms_around_1 = __webpack_require__(/*! ./rooms_around */ \"./src/rooms_around.ts\");\nvar room_decorator_1 = __webpack_require__(/*! ./room/room_decorator */ \"./src/room/room_decorator.ts\");\nvar Multimap = /** @class */ (function () {\n    function Multimap(game) {\n        this.game = game;\n        this.roomsAround = [];\n        this.multimap = {};\n    }\n    Multimap.prototype.getMap = function (level) {\n        return this.multimap[level];\n    };\n    Multimap.prototype.generateMultimap = function (width, height) {\n        this.roomDecorator = new room_decorator_1.RoomDecorator();\n        this.multimap = {};\n        this.spirals = [];\n        this.roomsAround = [];\n        for (var i = 0; i < 7; i++) {\n            this.generateLevel(i);\n        }\n        this.decorateRooms();\n        this.connectSpirals();\n    };\n    Multimap.prototype.decorateRooms = function () {\n        var allRooms = [];\n        for (var _i = 0, _a = this.roomsAround; _i < _a.length; _i++) {\n            var roomsAround = _a[_i];\n            for (var _b = 0, _c = roomsAround.getRooms(); _b < _c.length; _b++) {\n                var room = _c[_b];\n                allRooms.push(room);\n            }\n        }\n        rot_js_1.RNG.shuffle(allRooms);\n        for (var _d = 0, allRooms_1 = allRooms; _d < allRooms_1.length; _d++) {\n            var room = allRooms_1[_d];\n            this.roomDecorator.decorate(room, this.getMap(room.level));\n        }\n    };\n    Multimap.prototype.generateLevel = function (level) {\n        this.multimap[level] = new map_1.Map(this.game);\n        var left = level % 2 == 0;\n        var spiralSize = Multimap.getSpiralSize(level);\n        var spiralPart = new spiral_part_1.SpiralPart(level, spiralSize.inner, spiralSize.outer, left);\n        spiralPart.imprintToMap(this.getMap(level));\n        this.spirals.push(spiralPart);\n        var roomsAround = new rooms_around_1.RoomsAround(level, spiralPart, 13 + level);\n        roomsAround.imprintToMap(this.getMap(level));\n        this.roomsAround.push(roomsAround);\n        this.multimap[level].enlarge();\n    };\n    Multimap.getSpiralSize = function (level) {\n        var inner = 3 + Math.floor(level * 0.6);\n        var outer = 6 + Math.floor(level * 1.2);\n        return { inner: inner, outer: outer };\n    };\n    Multimap.prototype.connectSpirals = function () {\n        for (var _i = 0, _a = this.spirals; _i < _a.length; _i++) {\n            var spiral = _a[_i];\n            spiral.connect(this);\n        }\n    };\n    Multimap.prototype.getRandomTilePositions = function (type, quantity) {\n        if (quantity === void 0) { quantity = 1; }\n        var buffer = [];\n        var result = [];\n        for (var levelKey in this.multimap) {\n            var level = parseInt(levelKey);\n            var levelMap = this.getMap(level).map;\n            for (var key in levelMap) {\n                if (levelMap[key].type === type) {\n                    var point = Multimap.keyToPoint(key);\n                    buffer.push(new point3d_1.Point3D(level, point.x, point.y));\n                }\n            }\n        }\n        var index;\n        while (buffer.length > 0 && result.length < quantity) {\n            index = Math.floor(rot_js_1.RNG.getUniform() * buffer.length);\n            result.push(buffer.splice(index, 1)[0]);\n        }\n        return result;\n    };\n    Multimap.prototype.getRandomWarpFromTo = function (fromLevel, toLevel) {\n        var buffer = [];\n        var levelMap = this.getMap(fromLevel).map;\n        for (var key in levelMap) {\n            var levelMapElement = levelMap[key];\n            if (levelMapElement instanceof warptile_1.WarpTile) {\n                if (levelMapElement.targetLevel == toLevel) {\n                    var point = Multimap.keyToPoint(key);\n                    buffer.push(new point3d_1.Point3D(fromLevel, point.x, point.y));\n                }\n            }\n        }\n        var index = Math.floor(rot_js_1.RNG.getUniform() * buffer.length);\n        return buffer[index];\n    };\n    Multimap.prototype.getRandomTargets = function (filter, quantity) {\n        if (quantity === void 0) { quantity = 1; }\n        var buffer = [];\n        var result = [];\n        for (var levelKey in this.multimap) {\n            var level = parseInt(levelKey);\n            var levelMap = this.getMap(level).map;\n            for (var key in levelMap) {\n                var tile = levelMap[key];\n                if (filter(tile)) {\n                    var point = Multimap.keyToPoint(key);\n                    buffer.push(new point3d_1.Point3D(level, point.x, point.y));\n                }\n            }\n        }\n        var index;\n        while (buffer.length > 0 && result.length < quantity) {\n            index = Math.floor(rot_js_1.RNG.getUniform() * buffer.length);\n            result.push(buffer.splice(index, 1)[0]);\n        }\n        return result;\n    };\n    Multimap.prototype.getTileType = function (level, x, y) {\n        return this.getMap(level).getTileType(x, y);\n    };\n    Multimap.prototype.getTile = function (point) {\n        return this.getMap(point.level).getTile(point.x, point.y);\n    };\n    Multimap.prototype.isPassable = function (point) {\n        var map = this.getMap(point.level);\n        return map.isPassable(point.x, point.y);\n    };\n    Multimap.prototype.assignBedrooms = function (actors) {\n        var shuffledRoomsAround = rot_js_1.RNG.shuffle(__spreadArrays(this.roomsAround));\n        for (var _i = 0, shuffledRoomsAround_1 = shuffledRoomsAround; _i < shuffledRoomsAround_1.length; _i++) {\n            var roomsAround = shuffledRoomsAround_1[_i];\n            roomsAround.assignBedrooms(actors);\n        }\n    };\n    Multimap.keyToPoint = function (key) {\n        var parts = key.split(\",\");\n        return new point_1.Point(parseInt(parts[0]), parseInt(parts[1]));\n    };\n    return Multimap;\n}());\nexports.Multimap = Multimap;\n\n\n//# sourceURL=webpack:///./src/multimap.ts?");

/***/ }),

/***/ "./src/point.ts":
/*!**********************!*\
  !*** ./src/point.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point = void 0;\nvar Point = /** @class */ (function () {\n    function Point(x, y) {\n        var _this = this;\n        this.x = x;\n        this.y = y;\n        this.toString = function () {\n            return _this.x + \",\" + _this.y;\n        };\n    }\n    Point.prototype.equals = function (point) {\n        return this.x == point.x && this.y == point.y;\n    };\n    Point.prototype.toKey = function () {\n        return this.x + \",\" + this.y;\n    };\n    Point.prototype.plus = function (another) {\n        return new Point(this.x + another.x, this.y + another.y);\n    };\n    Point.prototype.minus = function (another) {\n        return this.plus(another.reverse());\n    };\n    Point.prototype.reverse = function () {\n        return new Point(-this.x, -this.y);\n    };\n    Point.prototype.dist4 = function (another) {\n        return this.minus(another).norm4();\n    };\n    Point.prototype.scale = function (factor) {\n        return new Point(Math.round(this.x * factor), Math.round(this.y * factor));\n    };\n    Point.prototype.norm4 = function () {\n        return Math.abs(this.x) + Math.abs(this.y);\n    };\n    return Point;\n}());\nexports.Point = Point;\n\n\n//# sourceURL=webpack:///./src/point.ts?");

/***/ }),

/***/ "./src/point3d.ts":
/*!************************!*\
  !*** ./src/point3d.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Point3D = void 0;\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar Point3D = /** @class */ (function () {\n    function Point3D(level, x, y) {\n        this.level = level;\n        this.x = x;\n        this.y = y;\n    }\n    Point3D.prototype.equals = function (another) {\n        if (another == null) {\n            return false;\n        }\n        return this.level == another.level && this.x == another.x && this.y == another.y;\n    };\n    Point3D.prototype.toKey = function () {\n        return this.level + \",\" + this.x + \",\" + this.y;\n    };\n    Point3D.prototype.toPoint = function () {\n        return new point_1.Point(this.x, this.y);\n    };\n    return Point3D;\n}());\nexports.Point3D = Point3D;\n\n\n//# sourceURL=webpack:///./src/point3d.ts?");

/***/ }),

/***/ "./src/room/bedroom_decorator.ts":
/*!***************************************!*\
  !*** ./src/room/bedroom_decorator.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BedroomDecorator = void 0;\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar bed_1 = __webpack_require__(/*! ../tile/bed */ \"./src/tile/bed.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar bookshelf_1 = __webpack_require__(/*! ../tile/bookshelf */ \"./src/tile/bookshelf.ts\");\nvar snake_helper_1 = __webpack_require__(/*! ./snake_helper */ \"./src/room/snake_helper.ts\");\nvar BedroomDecorator = /** @class */ (function () {\n    function BedroomDecorator(map) {\n        this.map = map;\n        this.map = map;\n    }\n    BedroomDecorator.prototype.decorate = function (room) {\n        var snake = snake_helper_1.SnakeHelper.getSnake(room.lt, room.rd);\n        snake_helper_1.SnakeHelper.rotateSnakeRandomly(snake);\n        snake.push(snake[0]);\n        var bedPlaced = false;\n        var doorNearby = BedroomDecorator.doorNearby(snake[0], room);\n        for (var i = 1; i < snake.length - 1; i++) {\n            var nextDoorNearby = BedroomDecorator.doorNearby(snake[i], room);\n            if (!(bedPlaced || doorNearby || nextDoorNearby)) {\n                // place bed\n                this.placeBed(room, snake[i - 1], snake[i]);\n                bedPlaced = true;\n                continue;\n            }\n            doorNearby = nextDoorNearby;\n            if (!nextDoorNearby && rot_js_1.RNG.getUniform() > 0.7) {\n                // place bookshelf\n                this.map.setTile(snake[i].x, snake[i].y, new bookshelf_1.Bookshelf(room.danger));\n            }\n        }\n        if (!bedPlaced) {\n            // fallback bed placing\n            var center = room.lt.plus(room.rd).scale(0.5);\n            this.placeBed(room, center, center.plus(new point_1.Point(0, 1)));\n        }\n    };\n    BedroomDecorator.prototype.placeBed = function (room, point1, point2) {\n        var bedTile = new bed_1.Bed(room);\n        this.map.setTile(point1.x, point1.y, bedTile);\n        this.map.setTile(point2.x, point2.y, bedTile);\n    };\n    BedroomDecorator.doorNearby = function (point, room) {\n        for (var _i = 0, _a = room.doors; _i < _a.length; _i++) {\n            var door = _a[_i];\n            if (door.dist4(point) <= 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return BedroomDecorator;\n}());\nexports.BedroomDecorator = BedroomDecorator;\n\n\n//# sourceURL=webpack:///./src/room/bedroom_decorator.ts?");

/***/ }),

/***/ "./src/room/dining_room_decorator.ts":
/*!*******************************************!*\
  !*** ./src/room/dining_room_decorator.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiningRoomDecorator = void 0;\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar tile_1 = __webpack_require__(/*! ../tile/tile */ \"./src/tile/tile.ts\");\nvar DiningRoomDecorator = /** @class */ (function () {\n    function DiningRoomDecorator(map) {\n        this.map = map;\n        this.map = map;\n    }\n    DiningRoomDecorator.prototype.decorate = function (room) {\n        var size = room.rd.minus(room.lt);\n        for (var i = 1; i < size.x; i++) {\n            for (var j = 1; j < size.y; j++) {\n                var tile = DiningRoomDecorator.getDecorationTile(i, j);\n                if (tile == null) {\n                    continue;\n                }\n                var target = new point_1.Point(i, j).plus(room.lt);\n                if (this.map.getTile(target.x, target.y) == tile_1.Tile.floor)\n                    continue;\n                if (this.doorNearby(target, room)) {\n                    continue;\n                }\n                this.map.setTile(target.x, target.y, tile);\n            }\n        }\n    };\n    DiningRoomDecorator.getDecorationTile = function (i, j) {\n        if (i % 4 == 3 || j % 4 == 0) {\n            return null;\n        }\n        if (i % 4 == 1) {\n            return tile_1.Tile.table;\n        }\n        return tile_1.Tile.chair;\n    };\n    DiningRoomDecorator.prototype.doorNearby = function (point, room) {\n        for (var _i = 0, _a = room.doors; _i < _a.length; _i++) {\n            var door = _a[_i];\n            if (door.dist4(point) <= 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return DiningRoomDecorator;\n}());\nexports.DiningRoomDecorator = DiningRoomDecorator;\n\n\n//# sourceURL=webpack:///./src/room/dining_room_decorator.ts?");

/***/ }),

/***/ "./src/room/library_decorator.ts":
/*!***************************************!*\
  !*** ./src/room/library_decorator.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LibraryDecorator = void 0;\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar tile_1 = __webpack_require__(/*! ../tile/tile */ \"./src/tile/tile.ts\");\nvar bookshelf_1 = __webpack_require__(/*! ../tile/bookshelf */ \"./src/tile/bookshelf.ts\");\nvar LibraryDecorator = /** @class */ (function () {\n    function LibraryDecorator(map) {\n        this.map = map;\n        this.map = map;\n    }\n    LibraryDecorator.prototype.decorate = function (room) {\n        var size = room.rd.minus(room.lt);\n        var vertical = size.x < size.y;\n        if (vertical) {\n            this.decorateVertical(size, room);\n        }\n        else {\n            this.decorateHorizontal(size, room);\n        }\n    };\n    LibraryDecorator.prototype.decorateHorizontal = function (size, room) {\n        for (var i = 1; i < size.x; i++) {\n            for (var j = 0; j < size.y + 1; j++) {\n                if (j % 2 == 0) {\n                    continue;\n                }\n                var target = new point_1.Point(i, j).plus(room.lt);\n                if (this.map.getTile(target.x, target.y) == tile_1.Tile.floor)\n                    continue;\n                if (this.doorNearby(target, room)) {\n                    continue;\n                }\n                this.map.setTile(target.x, target.y, new bookshelf_1.Bookshelf(room.danger));\n            }\n        }\n    };\n    LibraryDecorator.prototype.decorateVertical = function (size, room) {\n        for (var i = 0; i < size.x + 1; i++) {\n            for (var j = 1; j < size.y; j++) {\n                if (i % 2 == 0) {\n                    continue;\n                }\n                var target = new point_1.Point(i, j).plus(room.lt);\n                if (this.doorNearby(target, room)) {\n                    continue;\n                }\n                this.map.setTile(target.x, target.y, new bookshelf_1.Bookshelf(room.danger));\n            }\n        }\n    };\n    LibraryDecorator.prototype.doorNearby = function (point, room) {\n        for (var _i = 0, _a = room.doors; _i < _a.length; _i++) {\n            var door = _a[_i];\n            if (door.dist4(point) <= 1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return LibraryDecorator;\n}());\nexports.LibraryDecorator = LibraryDecorator;\n\n\n//# sourceURL=webpack:///./src/room/library_decorator.ts?");

/***/ }),

/***/ "./src/room/room_decorator.ts":
/*!************************************!*\
  !*** ./src/room/room_decorator.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoomDecorator = exports.RoomType = void 0;\nvar library_decorator_1 = __webpack_require__(/*! ./library_decorator */ \"./src/room/library_decorator.ts\");\nvar bedroom_decorator_1 = __webpack_require__(/*! ./bedroom_decorator */ \"./src/room/bedroom_decorator.ts\");\nvar dining_room_decorator_1 = __webpack_require__(/*! ./dining_room_decorator */ \"./src/room/dining_room_decorator.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar snake_helper_1 = __webpack_require__(/*! ./snake_helper */ \"./src/room/snake_helper.ts\");\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar RoomType;\n(function (RoomType) {\n    RoomType[RoomType[\"NONE\"] = 0] = \"NONE\";\n    RoomType[RoomType[\"BEDROOM\"] = 1] = \"BEDROOM\";\n    RoomType[RoomType[\"LIBRARY\"] = 2] = \"LIBRARY\";\n    RoomType[RoomType[\"DINING_ROOM\"] = 3] = \"DINING_ROOM\";\n})(RoomType = exports.RoomType || (exports.RoomType = {}));\nvar RoomDecorator = /** @class */ (function () {\n    function RoomDecorator() {\n        this.roomTypeLimit = {};\n        this.roomTypeCount = {};\n        this.roomTypeLimit[RoomType.DINING_ROOM] = 3;\n        this.roomTypeLimit[RoomType.BEDROOM] = 16;\n        this.roomTypeLimit[RoomType.LIBRARY] = 18;\n    }\n    RoomDecorator.prototype.decorate = function (room, map) {\n        if (room.type == RoomType.NONE) {\n            this.chooseAndAssignType(room, map);\n        }\n        if (room.type != RoomType.NONE) {\n            this.decorateByType(map, room);\n        }\n    };\n    RoomDecorator.prototype.decorateByType = function (map, room) {\n        if (room.type == RoomType.LIBRARY) {\n            new library_decorator_1.LibraryDecorator(map).decorate(room);\n        }\n        if (room.type == RoomType.BEDROOM) {\n            new bedroom_decorator_1.BedroomDecorator(map).decorate(room);\n        }\n        if (room.type == RoomType.DINING_ROOM) {\n            new dining_room_decorator_1.DiningRoomDecorator(map).decorate(room);\n        }\n    };\n    RoomDecorator.prototype.chooseAndAssignType = function (room, map) {\n        if (room.squaredSize < 15 && RoomDecorator.isSuitableForBedroom(room, map)) {\n            if (this.assignType(room, RoomType.BEDROOM)) {\n                room.danger = true;\n                room.typicalRoomTile.refreshTilesAfterRoomPropsChange();\n                return true;\n            }\n            return false;\n        }\n        if (room.squaredSize >= 35) {\n            if (this.assignType(room, RoomType.DINING_ROOM))\n                return true;\n        }\n        if (this.assignType(room, RoomType.LIBRARY)) {\n            room.danger = rot_js_1.RNG.getUniform() > 0.6;\n            room.typicalRoomTile.refreshTilesAfterRoomPropsChange();\n            return true;\n        }\n        return false;\n    };\n    RoomDecorator.prototype.assignType = function (room, type) {\n        var newAmount = this.roomTypeCount[type] == null ? 1 : this.roomTypeCount[type] + 1;\n        var limit = this.roomTypeLimit[type];\n        if (limit != null && newAmount > limit) {\n            return false;\n        }\n        room.type = type;\n        this.roomTypeCount[type] = newAmount;\n        return true;\n    };\n    RoomDecorator.isSuitableForBedroom = function (room, map) {\n        var roomSurroundings = snake_helper_1.SnakeHelper.getSnake(room.lt.plus(new point_1.Point(-1, -1)), room.rd.plus(new point_1.Point(1, 1)));\n        for (var _i = 0, roomSurroundings_1 = roomSurroundings; _i < roomSurroundings_1.length; _i++) {\n            var point = roomSurroundings_1[_i];\n            var tile = map.getTile(point.x, point.y);\n            if (tile == null)\n                continue;\n            if (tile.type == 0 /* Floor */) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return RoomDecorator;\n}());\nexports.RoomDecorator = RoomDecorator;\n\n\n//# sourceURL=webpack:///./src/room/room_decorator.ts?");

/***/ }),

/***/ "./src/room/room_property.ts":
/*!***********************************!*\
  !*** ./src/room/room_property.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoomProperties = void 0;\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar room_decorator_1 = __webpack_require__(/*! ./room_decorator */ \"./src/room/room_decorator.ts\");\nvar uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/index.js\");\nvar RoomProperties = /** @class */ (function () {\n    function RoomProperties(room, level, shift) {\n        this.level = level;\n        this.shift = shift;\n        this.id = uuid_1.v4();\n        this.doors = [];\n        this.typicalRoomTile = null;\n        this.occupant = null;\n        this.type = room_decorator_1.RoomType.NONE;\n        this.danger = false;\n        this.lt = new point_1.Point(room.getLeft(), room.getTop()).plus(shift);\n        this.rd = new point_1.Point(room.getRight(), room.getBottom()).plus(shift);\n        this.squaredSize = Math.abs(this.rd.x - this.lt.x) * Math.abs(this.rd.y - this.lt.y);\n        this.shift = shift;\n        this.level = level;\n        this.open = true;\n        room.getDoors(this.doorsCallback.bind(this));\n    }\n    RoomProperties.prototype.doorsCallback = function (x, y) {\n        this.doors.push(new point_1.Point(x, y).plus(this.shift));\n    };\n    RoomProperties.prototype.equals = function (other) {\n        return other != null && other.id == this.id;\n    };\n    return RoomProperties;\n}());\nexports.RoomProperties = RoomProperties;\n\n\n//# sourceURL=webpack:///./src/room/room_property.ts?");

/***/ }),

/***/ "./src/room/snake_helper.ts":
/*!**********************************!*\
  !*** ./src/room/snake_helper.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SnakeHelper = void 0;\nvar point_1 = __webpack_require__(/*! ../point */ \"./src/point.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar SnakeHelper = /** @class */ (function () {\n    function SnakeHelper() {\n    }\n    SnakeHelper.getSnake = function (lt, rd) {\n        var snake = [];\n        var size = rd.minus(lt);\n        for (var x = 0; x < size.x + 1; x++) {\n            snake.push(lt.plus(new point_1.Point(x, 0)));\n        }\n        for (var y = 1; y < size.y; y++) {\n            snake.push(new point_1.Point(rd.x, lt.y + y));\n        }\n        for (var x = 0; x < size.x + 1; x++) {\n            snake.push(rd.plus(new point_1.Point(-x, 0)));\n        }\n        for (var y = 1; y < size.y; y++) {\n            snake.push(new point_1.Point(lt.x, rd.y - y));\n        }\n        return snake;\n    };\n    // TODO: could be generic and effective\n    SnakeHelper.rotateSnakeRandomly = function (snake) {\n        var shift = rot_js_1.RNG.getUniformInt(0, snake.length - 1);\n        for (var i = 0; i < shift; i++) {\n            var first = snake.shift();\n            snake.push(first);\n        }\n    };\n    return SnakeHelper;\n}());\nexports.SnakeHelper = SnakeHelper;\n\n\n//# sourceURL=webpack:///./src/room/snake_helper.ts?");

/***/ }),

/***/ "./src/rooms_around.ts":
/*!*****************************!*\
  !*** ./src/rooms_around.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoomsAround = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile/tile */ \"./src/tile/tile.ts\");\nvar digger_1 = __webpack_require__(/*! rot-js/lib/map/digger */ \"./node_modules/rot-js/lib/map/digger.js\");\nvar point_1 = __webpack_require__(/*! ./point */ \"./src/point.ts\");\nvar door_1 = __webpack_require__(/*! ./tile/door */ \"./src/tile/door.ts\");\nvar room_tile_1 = __webpack_require__(/*! ./tile/room_tile */ \"./src/tile/room_tile.ts\");\nvar room_property_1 = __webpack_require__(/*! ./room/room_property */ \"./src/room/room_property.ts\");\nvar room_decorator_1 = __webpack_require__(/*! ./room/room_decorator */ \"./src/room/room_decorator.ts\");\nvar player_1 = __webpack_require__(/*! ./actor/player */ \"./src/actor/player.ts\");\nvar roomDebug = false;\nvar RoomsAround = /** @class */ (function () {\n    function RoomsAround(level, spiralPart, outsideDiameter) {\n        this.level = level;\n        this.spiralPart = spiralPart;\n        this.doorsList = [];\n        this.roomsWithProperty = [];\n        this.generatedTiles = {};\n        if (roomDebug) {\n            this.width = 20;\n            this.height = 20;\n            this.shift = new point_1.Point(100, 100);\n        }\n        else {\n            this.outsideDiameter = outsideDiameter;\n            this.width = Math.round(1.7 * outsideDiameter);\n            this.height = 2 * this.outsideDiameter;\n            var shiftX = spiralPart.orientedLeft ? -this.width : 0;\n            this.shift = new point_1.Point(shiftX, -this.outsideDiameter);\n        }\n        this.generate();\n    }\n    RoomsAround.prototype.generate = function () {\n        var digger = new digger_1.default(this.width, this.height, { \"dugPercentage\": 0.6, \"corridorLength\": [1, 4], \"roomHeight\": [3, 9], \"roomWidth\": [3, 9] });\n        digger.create(this.diggerCallback.bind(this));\n        for (var _i = 0, _a = digger.getRooms(); _i < _a.length; _i++) {\n            var room = _a[_i];\n            room.getDoors(this.doorsCallback.bind(this));\n        }\n        this.digger = digger;\n    };\n    RoomsAround.prototype.imprintToMap = function (map) {\n        for (var _i = 0, _a = this.digger.getRooms(); _i < _a.length; _i++) {\n            var room = _a[_i];\n            var props = new room_property_1.RoomProperties(room, this.level, this.shift);\n            var roomTile = new room_tile_1.RoomTile(props);\n            props.typicalRoomTile = roomTile;\n            this.roomsWithProperty.push(props);\n            for (var i = room._x1; i <= room._x2; i++) {\n                for (var j = room._y1; j <= room._y2; j++) {\n                    if (map.getTile(this.shift.x + i, this.shift.y + j) == null)\n                        map.setTile(i + this.shift.x, j + this.shift.y, roomTile);\n                }\n            }\n        }\n        for (var generatedTilesKey in this.generatedTiles) {\n            var point = this.keyToPoint(generatedTilesKey).plus(this.shift);\n            if (map.getTile(point.x, point.y) == null) {\n                map.setTile(point.x, point.y, tile_1.Tile.floor);\n            }\n        }\n        for (var _b = 0, _c = this.doorsList; _b < _c.length; _b++) {\n            var doorPoint = _c[_b];\n            var point = doorPoint.plus(this.shift);\n            if (map.getTileType(point.x, point.y) == 0 /* Floor */) {\n                map.setTile(point.x, point.y, new door_1.Door(1));\n            }\n        }\n    };\n    RoomsAround.prototype.getRooms = function () {\n        return __spreadArrays(this.roomsWithProperty);\n    };\n    RoomsAround.prototype.assignBedrooms = function (actorList) {\n        for (var _i = 0, _a = this.roomsWithProperty; _i < _a.length; _i++) {\n            var room = _a[_i];\n            if (actorList.length == 0)\n                return;\n            if (room.type != room_decorator_1.RoomType.BEDROOM || room.occupant != null)\n                continue;\n            room.occupant = actorList.pop();\n            if (room.occupant instanceof player_1.Player) {\n                // remove danger\n                room.danger = false;\n                room.typicalRoomTile.refreshTilesAfterRoomPropsChange();\n            }\n        }\n    };\n    RoomsAround.prototype.coordinatesToKey = function (x, y) {\n        return x + \",\" + y;\n    };\n    RoomsAround.prototype.keyToPoint = function (key) {\n        var parts = key.split(\",\");\n        return new point_1.Point(parseInt(parts[0]), parseInt(parts[1]));\n    };\n    RoomsAround.prototype.doorsCallback = function (x, y) {\n        this.doorsList.push(new point_1.Point(x, y));\n    };\n    RoomsAround.prototype.diggerCallback = function (x, y, wall) {\n        if (wall) {\n            return;\n        }\n        this.generatedTiles[this.coordinatesToKey(x, y)] = tile_1.Tile.floor;\n    };\n    return RoomsAround;\n}());\nexports.RoomsAround = RoomsAround;\n\n\n//# sourceURL=webpack:///./src/rooms_around.ts?");

/***/ }),

/***/ "./src/spiral_part.ts":
/*!****************************!*\
  !*** ./src/spiral_part.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpiralPart = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile/tile */ \"./src/tile/tile.ts\");\nvar warptile_1 = __webpack_require__(/*! ./tile/warptile */ \"./src/tile/warptile.ts\");\nvar SpiralPart = /** @class */ (function () {\n    function SpiralPart(level, insideDiameter, outsideDiameter, left) {\n        this.level = level;\n        this.outsideDiameter = outsideDiameter;\n        this.insideDiameter = insideDiameter;\n        this.orientedLeft = left;\n    }\n    SpiralPart.prototype.imprintToMap = function (map) {\n        var outDiamSquared = this.outsideDiameter * this.outsideDiameter;\n        var inDiamSquared = this.insideDiameter * this.insideDiameter;\n        var left = this.orientedLeft ? -this.outsideDiameter : 0;\n        var right = this.orientedLeft ? -1 : this.outsideDiameter;\n        for (var i = left; i <= right; i++) {\n            for (var j = -this.outsideDiameter; j < this.outsideDiameter; j++) {\n                var localR = i * i + j * j;\n                if (inDiamSquared <= localR && localR <= outDiamSquared) {\n                    map.setTile(i, j, tile_1.Tile.floor);\n                }\n            }\n        }\n    };\n    SpiralPart.prototype.connect = function (multimap) {\n        var connectionX = this.orientedLeft ? 0 : -1;\n        var levelDirection = this.orientedLeft ? -1 : 1;\n        var thisLevelMap = multimap.getMap(this.level);\n        // top\n        var topTargetMap = multimap.getMap(this.level + levelDirection);\n        if (topTargetMap != null) {\n            var warpTile = new warptile_1.WarpTile(this.level + levelDirection);\n            for (var j = -this.outsideDiameter - 2; j <= 1; j++) {\n                if (topTargetMap.isPassable(connectionX, j)) {\n                    thisLevelMap.setTile(connectionX, j, warpTile);\n                }\n            }\n        }\n        // bottom\n        var bottomTargetMap = multimap.getMap(this.level - levelDirection);\n        if (bottomTargetMap != null) {\n            var warpTile = new warptile_1.WarpTile(this.level - levelDirection);\n            for (var j = 1; j <= this.outsideDiameter + 2; j++) {\n                if (bottomTargetMap.isPassable(connectionX, j)) {\n                    thisLevelMap.setTile(connectionX, j, warpTile);\n                }\n            }\n        }\n    };\n    return SpiralPart;\n}());\nexports.SpiralPart = SpiralPart;\n\n\n//# sourceURL=webpack:///./src/spiral_part.ts?");

/***/ }),

/***/ "./src/status-line.ts":
/*!****************************!*\
  !*** ./src/status-line.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusLine = exports.bookNumberColor = void 0;\nvar text_utility_1 = __webpack_require__(/*! ./text-utility */ \"./src/text-utility.ts\");\nexports.bookNumberColor = \"#afb\";\nvar StatusLine = /** @class */ (function () {\n    function StatusLine(game, position, maxWidth, params) {\n        this.game = game;\n        this.position = position;\n        this.maxWidth = maxWidth;\n        if (!params) {\n            params = {};\n        }\n        this.night = params.night || 1;\n        this.turns = params.turns || 0;\n        this.turnsMax = params.turnsMax || 0;\n        this.booksFound = params.booksFound || 0;\n    }\n    StatusLine.prototype.reset = function () {\n        this.turns = 0;\n        this.booksFound = 0;\n    };\n    StatusLine.prototype.draw = function () {\n        var turnsColor = this.turns > this.turnsMax ? \"#f00\" : '#fff';\n        var text = \"\"\n            + (\"Turns: %c{\" + turnsColor + \"}\" + text_utility_1.padLeft(this.turns.toString(), 3) + \" / \" + this.turnsMax.toString() + \" %c{} \")\n            + (\"Books found: %c{\" + exports.bookNumberColor + \"}\" + text_utility_1.padRight(this.booksFound.toString(), 3));\n        this.game.drawText(this.position, text, this.maxWidth);\n    };\n    return StatusLine;\n}());\nexports.StatusLine = StatusLine;\n\n\n//# sourceURL=webpack:///./src/status-line.ts?");

/***/ }),

/***/ "./src/text-utility.ts":
/*!*****************************!*\
  !*** ./src/text-utility.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.padRight = exports.padLeft = void 0;\nfunction padLeft(text, length, character) {\n    var char = character || \" \";\n    while (text.length < length) {\n        text = char + text;\n    }\n    return text;\n}\nexports.padLeft = padLeft;\nfunction padRight(text, length, character) {\n    var char = character || \" \";\n    while (text.length < length) {\n        text += char;\n    }\n    return text;\n}\nexports.padRight = padRight;\n\n\n//# sourceURL=webpack:///./src/text-utility.ts?");

/***/ }),

/***/ "./src/tile/bed.ts":
/*!*************************!*\
  !*** ./src/tile/bed.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bed = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile */ \"./src/tile/tile.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar player_1 = __webpack_require__(/*! ../actor/player */ \"./src/actor/player.ts\");\nfunction glyphChar() {\n    return \"%\";\n}\nvar colors = [\"#ffffff\",\n    \"#d95763\",\n    \"#cbdbfc\",\n    \"#37946e\",\n    \"#eec39a\",\n];\nfunction chooseColor() {\n    return rot_js_1.RNG.getItem(colors);\n}\nvar Bed = /** @class */ (function (_super) {\n    __extends(Bed, _super);\n    function Bed(room) {\n        var _this = _super.call(this, 7 /* Bed */, new glyph_1.Glyph(glyphChar(), chooseColor()), false) || this;\n        _this.glyph.character = glyphChar();\n        _this.room = room;\n        return _this;\n    }\n    Bed.prototype.interactWith = function (actor, game) {\n        if (actor instanceof player_1.Player) {\n            if (this.room.occupant == null) {\n                game.addLogMessage(\"You are looking at unoccupied bed. You should leave it alone.\");\n                return true;\n            }\n            if (actor.getName() == this.room.occupant.getName()) {\n                if (game.statusLine.turns * 2 < game.statusLine.turnsMax) {\n                    game.addLogMessage(\"It is too early to go back to sleep, explore some more!\");\n                    return true;\n                }\n                if (game.statusLine.booksFound == 0) {\n                    game.addLogMessage(\"You can't go to sleep, there must be some clue in those books around!\");\n                    return true;\n                }\n                game.endTheGameReachingBed();\n                return true;\n            }\n            game.addLogMessage(\"You are inspecting \" +\n                (\"%c{\" + this.room.occupant.glyph.foregroundColor + \"}\" + this.room.occupant.getName() + \"'s%c{} bed. Rude!\"));\n            return true;\n        }\n        return true;\n    };\n    return Bed;\n}(tile_1.Tile));\nexports.Bed = Bed;\n\n\n//# sourceURL=webpack:///./src/tile/bed.ts?");

/***/ }),

/***/ "./src/tile/bookshelf.ts":
/*!*******************************!*\
  !*** ./src/tile/bookshelf.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bookshelf = exports.basicColor = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile */ \"./src/tile/tile.ts\");\nvar player_1 = __webpack_require__(/*! ../actor/player */ \"./src/actor/player.ts\");\nvar rot_js_1 = __webpack_require__(/*! rot-js */ \"./node_modules/rot-js/lib/index.js\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nexports.basicColor = \"#b36456\";\nvar searchedColor = \"#663830\";\nvar interestingColor = \"#ab73e6\";\nvar glyphChar = \"#\";\nfunction getColor(bookChance) {\n    if (bookChance > 0.25) {\n        return interestingColor;\n    }\n    if (bookChance <= 0) {\n        return searchedColor;\n    }\n    return exports.basicColor;\n}\nfunction getBookChance(dangerZone, rare) {\n    var result = 0.05;\n    if (dangerZone)\n        result += 0.15;\n    if (rare)\n        result += 0.6;\n    return result;\n}\nvar Bookshelf = /** @class */ (function (_super) {\n    __extends(Bookshelf, _super);\n    function Bookshelf(dangerZone) {\n        var _this = _super.call(this, 6 /* Bookshelf */, new glyph_1.Glyph(glyphChar, exports.basicColor), false) || this;\n        _this.dangerZone = dangerZone;\n        _this.reset();\n        return _this;\n    }\n    Bookshelf.prototype.reset = function () {\n        var rare = rot_js_1.RNG.getUniform() < 0.05;\n        this.bookChance = getBookChance(this.dangerZone, rare);\n        this.glyph.foregroundColor = getColor(this.bookChance);\n    };\n    Bookshelf.prototype.interactWith = function (actor, game) {\n        if (actor instanceof player_1.Player) {\n            if (rot_js_1.RNG.getUniform() < this.bookChance) {\n                this.bookFound(game);\n            }\n            else {\n                game.addLogMessage(\"There is no interesting book in this bookshelf.\");\n            }\n            this.bookChance = 0;\n            this.glyph.foregroundColor = getColor(this.bookChance);\n            return true;\n        }\n        return false;\n    };\n    Bookshelf.prototype.bookFound = function (game) {\n        game.addLogMessage(\"You have found interesting book!\");\n        game.statusLine.booksFound++;\n    };\n    return Bookshelf;\n}(tile_1.Tile));\nexports.Bookshelf = Bookshelf;\n\n\n//# sourceURL=webpack:///./src/tile/bookshelf.ts?");

/***/ }),

/***/ "./src/tile/door.ts":
/*!**************************!*\
  !*** ./src/tile/door.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Door = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile */ \"./src/tile/tile.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nfunction glyphChar(locked) {\n    if (locked < 1)\n        return \"/\";\n    return \"+\";\n}\nvar Door = /** @class */ (function (_super) {\n    __extends(Door, _super);\n    function Door(locked) {\n        var _this = _super.call(this, tile_1.Tile.warpPointTemplate.type, new glyph_1.Glyph(glyphChar(locked), tile_1.Tile.door.glyph.foregroundColor, tile_1.Tile.door.glyph.backgroundColor), false) || this;\n        _this.locked = locked;\n        _this.locked = locked;\n        return _this;\n    }\n    Door.prototype.close = function (lockStrength) {\n        this.locked = lockStrength;\n        this.glyph.character = glyphChar(this.locked);\n    };\n    Door.prototype.isPassable = function () {\n        return this.isOpen();\n    };\n    Door.prototype.interactWith = function (actor, game) {\n        if (this.isOpen()) {\n            this.close(1);\n        }\n        else {\n            this.pryOpen(1);\n        }\n        return true;\n    };\n    Door.prototype.isOpen = function () {\n        return this.locked <= 0;\n    };\n    Door.prototype.pryOpen = function (strength) {\n        if (strength >= this.locked) {\n            this.locked = 0;\n            this.glyph.character = glyphChar(this.locked);\n            return true;\n        }\n        return false;\n    };\n    return Door;\n}(tile_1.Tile));\nexports.Door = Door;\n\n\n//# sourceURL=webpack:///./src/tile/door.ts?");

/***/ }),

/***/ "./src/tile/room_tile.ts":
/*!*******************************!*\
  !*** ./src/tile/room_tile.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoomTile = exports.dangerColor = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile */ \"./src/tile/tile.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar room_decorator_1 = __webpack_require__(/*! ../room/room_decorator */ \"./src/room/room_decorator.ts\");\nexports.dangerColor = \"#ac3232\";\nfunction getDangerColor(roomProps, originalColor) {\n    if (roomProps.danger) {\n        return exports.dangerColor;\n    }\n    else {\n        return originalColor;\n    }\n}\nfunction getGlyphChar(roomProps) {\n    var type = roomProps.type;\n    if (type == room_decorator_1.RoomType.BEDROOM) {\n        return \"-\";\n    }\n    if (type == room_decorator_1.RoomType.LIBRARY) {\n        return \"=\";\n    }\n    if (type == room_decorator_1.RoomType.DINING_ROOM) {\n        return \"=\";\n    }\n    return \".\";\n}\nvar RoomTile = /** @class */ (function (_super) {\n    __extends(RoomTile, _super);\n    function RoomTile(roomProperties) {\n        var _this = _super.call(this, tile_1.Tile.floor.type, new glyph_1.Glyph(getGlyphChar(roomProperties)), true) || this;\n        _this.roomProps = roomProperties;\n        _this.refreshTilesAfterRoomPropsChange();\n        return _this;\n    }\n    RoomTile.prototype.refreshTilesAfterRoomPropsChange = function () {\n        this.glyph.foregroundColor = getDangerColor(this.roomProps, tile_1.Tile.floor.glyph.foregroundColor);\n        this.glyph.character = getGlyphChar(this.roomProps);\n    };\n    return RoomTile;\n}(tile_1.Tile));\nexports.RoomTile = RoomTile;\n\n\n//# sourceURL=webpack:///./src/tile/room_tile.ts?");

/***/ }),

/***/ "./src/tile/tile.ts":
/*!**************************!*\
  !*** ./src/tile/tile.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tile = void 0;\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar Tile = /** @class */ (function () {\n    function Tile(type, glyph, passable) {\n        this.type = type;\n        this.glyph = glyph;\n        this.passable = passable;\n    }\n    Tile.prototype.isPassable = function () {\n        return this.passable;\n    };\n    Tile.prototype.interactWith = function (actor, game) {\n        return false;\n    };\n    Tile.floor = new Tile(0 /* Floor */, new glyph_1.Glyph(\".\"), true);\n    Tile.box = new Tile(1 /* Box */, new glyph_1.Glyph(\"#\", \"#99e550\"), true);\n    Tile.searchedBox = new Tile(2 /* SearchedBox */, new glyph_1.Glyph(\"#\", \"#666\"), true);\n    Tile.destroyedBox = new Tile(3 /* DestroyedBox */, new glyph_1.Glyph(\"x\", \"#555\"), true);\n    Tile.warpPointTemplate = new Tile(4 /* WarpPoint */, new glyph_1.Glyph(\"*\", \"#ff7700\"), true);\n    Tile.door = new Tile(5 /* Door */, new glyph_1.Glyph(\"+\", \"#847e87\"), false);\n    Tile.chair = new Tile(8 /* Chair */, new glyph_1.Glyph(\"x\", \"#7d6c61\"), false);\n    Tile.table = new Tile(9 /* Table */, new glyph_1.Glyph(\"T\", \"#779bdc\"), false);\n    Tile.empty = new Tile(11 /* Empty */, new glyph_1.Glyph(\" \"), false);\n    return Tile;\n}());\nexports.Tile = Tile;\n\n\n//# sourceURL=webpack:///./src/tile/tile.ts?");

/***/ }),

/***/ "./src/tile/warptile.ts":
/*!******************************!*\
  !*** ./src/tile/warptile.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WarpTile = void 0;\nvar tile_1 = __webpack_require__(/*! ./tile */ \"./src/tile/tile.ts\");\nvar glyph_1 = __webpack_require__(/*! ../glyph */ \"./src/glyph.ts\");\nvar WarpTile = /** @class */ (function (_super) {\n    __extends(WarpTile, _super);\n    function WarpTile(targetLevel) {\n        var _this = _super.call(this, tile_1.Tile.warpPointTemplate.type, new glyph_1.Glyph(targetLevel.toString(), tile_1.Tile.warpPointTemplate.glyph.foregroundColor, tile_1.Tile.warpPointTemplate.glyph.backgroundColor), WarpTile.warpPointTemplate.isPassable()) || this;\n        _this.targetLevel = targetLevel;\n        _this.targetLevel = targetLevel;\n        return _this;\n    }\n    return WarpTile;\n}(tile_1.Tile));\nexports.WarpTile = WarpTile;\n\n\n//# sourceURL=webpack:///./src/tile/warptile.ts?");

/***/ }),

/***/ "./src/warper.ts":
/*!***********************!*\
  !*** ./src/warper.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Warper = void 0;\nvar warptile_1 = __webpack_require__(/*! ./tile/warptile */ \"./src/tile/warptile.ts\");\nvar point3d_1 = __webpack_require__(/*! ./point3d */ \"./src/point3d.ts\");\nvar player_1 = __webpack_require__(/*! ./actor/player */ \"./src/actor/player.ts\");\nvar Warper = /** @class */ (function () {\n    function Warper(multimap, game) {\n        this.multimap = multimap;\n        this.game = game;\n        this.messageSpamCounter = 0;\n        this.spamLimit = 8;\n    }\n    Warper.prototype.tryActorLevelWarp = function (actor) {\n        this.handleSpam(actor);\n        var tile = this.multimap.getTile(actor.position);\n        if (tile == null || !(tile instanceof warptile_1.WarpTile)) {\n            return;\n        }\n        this.informPlayer(actor, tile);\n        actor.position = new point3d_1.Point3D(tile.targetLevel, actor.position.x, actor.position.y);\n    };\n    Warper.prototype.handleSpam = function (actor) {\n        if (actor instanceof player_1.Player) {\n            this.messageSpamCounter++;\n        }\n    };\n    Warper.prototype.informPlayer = function (actor, tile) {\n        if (!(actor instanceof player_1.Player)) {\n            return;\n        }\n        if (this.messageSpamCounter > this.spamLimit) {\n            this.messageSpamCounter = 0;\n            var directionStr = actor.position.level < tile.targetLevel ? \"upward\" : \"downward\";\n            this.game.addLogMessage(\"You're spiraling \" + directionStr + \".\");\n        }\n    };\n    Warper.prototype.findTargetThroughWarps = function (actor, target) {\n        if (actor.position == null)\n            return null;\n        if (actor.position.level == target.level) {\n            return target;\n        }\n        var dir = Math.sign(target.level - actor.position.level);\n        return this.multimap.getRandomWarpFromTo(actor.position.level, actor.position.level + dir);\n    };\n    return Warper;\n}());\nexports.Warper = Warper;\n\n\n//# sourceURL=webpack:///./src/warper.ts?");

/***/ })

/******/ });